<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Senparc.Weixin.Work</name>
    </assembly>
    <members>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.AppApi">
            <summary>
            应用管理
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.AppApi.GetAppInfo(System.String,System.Int32,System.Int32)">
            <summary>
            获取企业号应用信息【QY移植修改】
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="agentId">企业应用的id，可在应用的设置页面查看</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.AppApi.SetApp(System.String,Senparc.Weixin.Work.AdvancedAPIs.App.SetAppPostData,System.Int32)">
            <summary>
            设置企业号应用
            此App只能修改现有的并且有权限管理的应用，无法创建新应用（因为新应用没有权限）
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="data">设置应用需要Post的数据</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.AppApi.GetAppList(System.String,System.Int32)">
            <summary>
            获取应用概况列表【QY移植修改】
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.App.GetAppInfoResult">
            <summary>
            获取企业号应用返回结果【QY移植修改】
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.App.GetAppInfoResult.agentid">
            <summary>
            企业应用id
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.App.GetAppInfoResult.name">
            <summary>
            企业应用名称
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.App.GetAppInfoResult.square_logo_url">
            <summary>
            企业应用方形头像
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.App.GetAppInfoResult.description">
            <summary>
            企业应用详情
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.App.GetAppInfoResult.allow_userinfos">
            <summary>
            企业应用可见范围（人员），其中包括userid和关注状态state
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.App.GetAppInfoResult.allow_partys">
            <summary>
            企业应用可见范围（部门）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.App.GetAppInfoResult.allow_tags">
            <summary>
            企业应用可见范围（标签）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.App.GetAppInfoResult.close">
            <summary>
            企业应用是否被禁用
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.App.GetAppInfoResult.redirect_domain">
            <summary>
            企业应用可信域名
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.App.GetAppInfoResult.report_location_flag">
            <summary>
            企业应用是否打开地理位置上报 0：不上报；1：进入会话上报；2：持续上报
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.App.GetAppInfoResult.isreportuser">
            <summary>
            是否接收用户变更通知。0：不接收；1：接收
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.App.GetAppInfoResult.home_url">
            <summary>
            应用主页url
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.App.GetAppListResult">
            <summary>
            设置企业号应用需要Post的数据
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.App.GetAppList_AppInfo">
            <summary>
            GetAppList_AppInfo【QY移植修改】
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.App.GetAppList_AppInfo.agentid">
            <summary>
            企业应用id
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.App.GetAppList_AppInfo.name">
            <summary>
            企业应用名称
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.App.GetAppList_AppInfo.square_logo_url">
            <summary>
            企业应用方形头像
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.App.SetAppPostData">
            <summary>
            设置企业号应用需要Post的数据【QY移植修改】
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.App.SetAppPostData.agentid">
            <summary>
            企业应用id
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.App.SetAppPostData.report_location_flag">
            <summary>
            企业应用是否打开地理位置上报 0：不上报；1：进入会话上报；2：持续上报
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.App.SetAppPostData.logo_mediaid">
            <summary>
            企业应用头像的mediaid，通过多媒体接口上传图片获得mediaid，上传后会自动裁剪成方形和圆形两个头像
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.App.SetAppPostData.name">
            <summary>
            企业应用名称
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.App.SetAppPostData.description">
            <summary>
            企业应用详情
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.App.SetAppPostData.redirect_domain">
            <summary>
            企业应用可信域名
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.App.SetAppPostData.isreportuser">
            <summary>
            是否接收用户变更通知。0：不接收；1：接收
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.App.SetAppPostData.home_url">
            <summary>
            应用主页url。url必须以http或者https开头。
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.AsynchronousApi">
            <summary>
            异步任务接口
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.AsynchronousApi.BatchSyncUser(System.String,System.String,Senparc.Weixin.Work.AdvancedAPIs.Asynchronous.Asynchronous_CallBack,System.Int32)">
            <summary>
            增量更新成员
            CSV模板下载地址：http://qydev.weixin.qq.com/batch_user_sample.csv
            注意事项：
            1.模板中的部门需填写部门ID，多个部门用分号分隔，部门ID必须为数字
            2.文件中存在、通讯录中也存在的成员，更新成员在文件中指定的字段值
            3.文件中存在、通讯录中不存在的成员，执行添加操作
            4.通讯录中存在、文件中不存在的成员，保持不变
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="mediaId">上传的csv文件的media_id</param>
            <param name="callBack">回调信息。任务完成后，通过callback推送事件给企业。具体请参考应用回调模式中的相应选项</param>
            <param name="timeOut"></param>
            post数据格式：
            {
               "media_id":"xxxxxx",
               "callback":
               {
                   "url": "xxx",
                   "token": "xxx",
                   "encodingaeskey": "xxx"
               }
            }
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.AsynchronousApi.BatchReplaceUser(System.String,System.String,Senparc.Weixin.Work.AdvancedAPIs.Asynchronous.Asynchronous_CallBack,System.Int32)">
            <summary>
            全量覆盖成员
            CSV模板下载地址：http://qydev.weixin.qq.com/batch_user_sample.csv
            注意事项：
            1.模板中的部门需填写部门ID，多个部门用分号分隔，部门ID必须为数字
            2.文件中存在、通讯录中也存在的成员，完全以文件为准
            3.文件中存在、通讯录中不存在的成员，执行添加操作
            4.通讯录中存在、文件中不存在的成员，执行删除操作。出于安全考虑，如果需要删除的成员多于50人，且多于现有人数的20%以上，系统将中止导入并返回相应的错误码
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="mediaId">上传的csv文件的media_id</param>
            <param name="callBack">回调信息。任务完成后，通过callback推送事件给企业。具体请参考应用回调模式中的相应选项</param>
            <param name="timeOut"></param>
            post数据格式：
            {
               "media_id":"xxxxxx",
               "callback":
               {
                   "url": "xxx",
                   "token": "xxx",
                   "encodingaeskey": "xxx"
               }
            }
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.AsynchronousApi.BatchReplaceParty(System.String,System.String,Senparc.Weixin.Work.AdvancedAPIs.Asynchronous.Asynchronous_CallBack,System.Int32)">
            <summary>
            全量覆盖部门
            CSV模板下载地址：http://qydev.weixin.qq.com/batch_party_sample.csv
            注意事项：
            1.文件中存在、通讯录中也存在的部门，执行修改操作
            2.文件中存在、通讯录中不存在的部门，执行添加操作
            3.文件中不存在、通讯录中存在的部门，当部门为空时，执行删除操作
            4.CSV文件中，部门名称、部门ID、父部门ID为必填字段，部门ID必须为数字；排序为可选字段，置空或填0不修改排序
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="mediaId">上传的csv文件的media_id</param>
            <param name="callBack">回调信息。任务完成后，通过callback推送事件给企业。具体请参考应用回调模式中的相应选项</param>
            <param name="timeOut"></param>
            post数据格式：
            {
               "media_id":"xxxxxx",
               "callback":
               {
                   "url": "xxx",
                   "token": "xxx",
                   "encodingaeskey": "xxx"
               }
            }
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.AsynchronousApi.GetReplaceUserResult(System.String,System.String)">
            <summary>
            获取异步更新或全面覆盖成员结果
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="jobId"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.AsynchronousApi.GetReplacePartyResult(System.String,System.String)">
            <summary>
            获取异步全面覆盖部门结果
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="jobId"></param>
            <returns></returns>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.Asynchronous.AsynchronousJobId">
            <summary>
            异步任务Id返回结果
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Asynchronous.AsynchronousJobId.jobid">
            <summary>
            异步任务id，最大长度为64字符
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Asynchronous.BaseAsynchronousResult.status">
            <summary>
            任务状态，整型，1表示任务开始，2表示任务进行中，3表示任务已完成
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Asynchronous.BaseAsynchronousResult.type">
            <summary>
            操作类型，字符串，目前分别有：
            1. sync_user(增量更新成员)
            2. replace_user(全量覆盖成员)
            3. invite_user(邀请成员关注)
            4. replace_party(全量覆盖部门)
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Asynchronous.BaseAsynchronousResult.total">
            <summary>
            任务运行总条数
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Asynchronous.BaseAsynchronousResult.percentage">
            <summary>
            目前运行百分比，当任务完成时为100
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Asynchronous.BaseAsynchronousResult.remaintime">
            <summary>
            预估剩余时间（单位：分钟），当任务完成时为0
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.Asynchronous.AsynchronousInviteUserResult">
            <summary>
            异步邀请成员返回结果
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Asynchronous.AsynchronousInviteUserItem.userid">
            <summary>
            成员UserID。对应管理端的帐号
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Asynchronous.AsynchronousInviteUserItem.invitetype">
            <summary>
            邀请类型：0 没有邀请方式或未邀请 1 微信邀请 2 邮件邀请
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.Asynchronous.AsynchronousReplaceUserResult">
            <summary>
            异步新增或更新成员返回结果
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Asynchronous.AsynchronousReplaceUserItem.userid">
            <summary>
            成员UserID。对应管理端的帐号
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Asynchronous.AsynchronousReplaceUserItem.action">
            <summary>
            操作类型（按位或）：1 表示修改，2 表示新增
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.Asynchronous.AsynchronousReplacePartyResult">
            <summary>
            异步覆盖部门返回结果
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Asynchronous.AsynchronousReplacePartyItem.partyid">
            <summary>
            部门ID
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Asynchronous.AsynchronousReplacePartyItem.action">
            <summary>
            操作类型（按位或）：1 新建部门 ，2 更改部门名称， 4 移动部门， 8 修改部门排序
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.ChatApi.CreateChat(System.String,System.String,System.String,System.String,System.String[],System.Int32)">
            <summary>
            创建会话
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="chatId">会话id。字符串类型，最长32个字符。只允许字符0-9及字母a-zA-Z, 如果值内容为64bit无符号整型：要求值范围在[1, 2^63)之间，[2^63, 2^64)为系统分配会话id区间</param>
            <param name="name">会话标题</param>
            <param name="owner">管理员userid，必须是该会话userlist的成员之一</param>
            <param name="userlist">会话成员列表，成员用userid来标识。会话成员必须在3人或以上，1000人以下</param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.ChatApi.GetChat(System.String,System.String)">
            <summary>
            获取会话
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="chatId"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.ChatApi.UpdateChat(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Int32)">
            <summary>
            修改会话信息
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="chatId">会话id</param>
            <param name="opUser">操作人userid</param>
            <param name="name">会话标题</param>
            <param name="owner">管理员userid，必须是该会话userlist的成员之一</param>
            <param name="addUserList">会话新增成员列表，成员用userid来标识</param>
            <param name="delUserList">会话退出成员列表，成员用userid来标识</param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.ChatApi.QuitChat(System.String,System.String,System.String,System.Int32)">
            <summary>
            退出会话
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="chatId"></param>
            <param name="opUser"></param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.ChatApi.ClearNotify(System.String,System.String,Senparc.Weixin.Work.Chat_Type,System.String,System.Int32)">
            <summary>
            清除消息未读状态
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="opUser">会话所有者的userid</param>
            <param name="type">会话类型：single|group，分别表示：群聊|单聊</param>
            <param name="chatIdOrUserId">会话值，为userid|chatid，分别表示：成员id|会话id，单聊是userid，群聊是chatid</param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.ChatApi.SendChatMessage(System.String,System.String,Senparc.Weixin.Work.Chat_Type,Senparc.Weixin.Work.ChatMsgType,System.String,System.String,System.Int32)">
            <summary>
            发消息
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="sender">发送人的userId</param>
            <param name="type">接收人类型：single|group，分别表示：群聊|单聊</param>
            <param name="msgType">消息类型,text|image|file</param>
            <param name="chatIdOrUserId">会话值，为userid|chatid，分别表示：成员id|会话id，单聊是userid，群聊是chatid</param>
            <param name="contentOrMediaId">文本消息是content，图片或文件是mediaId</param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.ChatApi.SetMute(System.String,System.Collections.Generic.List{Senparc.Weixin.Work.AdvancedAPIs.Chat.UserMute},System.Int32)">
            <summary>
            设置成员新消息免打扰
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="userMuteList">成员新消息免打扰参数，数组，最大支持10000个成员</param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.Chat.GetChatResult">
            <summary>
            获取会话返回结果
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Chat.GetChatResult.chat_info">
            <summary>
            会话信息
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Chat.ChatInfo.chatid">
            <summary>
            会话id
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Chat.ChatInfo.name">
            <summary>
            会话标题
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Chat.ChatInfo.owner">
            <summary>
            管理员userid
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Chat.ChatInfo.userlist">
            <summary>
            会话成员列表，成员用userid来标识
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.Chat.SetMuteResult">
            <summary>
            设置成员新消息免打扰返回结果
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Chat.SetMuteResult.invaliduser">
            <summary>
            列表中不存在的成员会返回在invaliduser里，剩余合法成员会继续执行
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.Chat.BaseSendChatMessageData">
            <summary>
            发送消息基础数据
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Chat.BaseSendChatMessageData.receiver">
            <summary>
            接收人
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Chat.BaseSendChatMessageData.sender">
            <summary>
            发送人
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Chat.BaseSendChatMessageData.msgtype">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Chat.Receiver.type">
            <summary>
            接收人类型：single|group，分别表示：群聊|单聊
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Chat.Receiver.id">
            <summary>
            接收人的值，为userid|chatid，分别表示：成员id|会话id
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.Chat.SendTextMessageData">
            <summary>
            发送text消息数据
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Chat.Chat_Content.content">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.Chat.SendImageMessageData">
            <summary>
            发送image消息数据
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Chat.Chat_Image.media_id">
            <summary>
            图片媒体文件id，可以调用上传素材文件接口获取
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.Chat.SendFileMessageData">
            <summary>
            发送file消息数据
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Chat.Chat_File.media_id">
            <summary>
            图片媒体文件id，可以调用上传素材文件接口获取
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.Chat.UserMute">
            <summary>
            成员新消息免打扰参数
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Chat.UserMute.userid">
            <summary>
            成员UserID
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Chat.UserMute.status">
            <summary>
            免打扰状态
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.ConcernApi">
            <summary>
            关注与取消关注
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.ConcernApi.TwoVerification(System.String,System.String)">
            <summary>
            二次验证
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="userId">员工UserID</param>
            <returns></returns>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.KFApi">
            <summary>
            发送消息
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.KFApi.SendText(System.String,Senparc.Weixin.Work.KF_User_Type,System.String,Senparc.Weixin.Work.KF_User_Type,System.String,System.String,System.Int32)">
            <summary>
            发送文本信息
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="senderType">发送人类型</param>
            <param name="senderId">发送人标志</param>
            <param name="receiverType">接收人类型</param>
            <param name="receiverId">接收人标志</param>
            <param name="content">消息内容</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.KFApi.SendImage(System.String,Senparc.Weixin.Work.KF_User_Type,System.String,Senparc.Weixin.Work.KF_User_Type,System.String,System.String,System.Int32)">
            <summary>
            发送图片信息
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="senderType">发送人类型</param>
            <param name="senderId">发送人标志</param>
            <param name="receiverType">接收人类型</param>
            <param name="receiverId">接收人标志</param>
            <param name="mediaId">图片的mediaId</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.KFApi.SendFile(System.String,Senparc.Weixin.Work.KF_User_Type,System.String,Senparc.Weixin.Work.KF_User_Type,System.String,System.String,System.Int32)">
            <summary>
            发送文件信息
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="senderType">发送人类型</param>
            <param name="senderId">发送人标志</param>
            <param name="receiverType">接收人类型</param>
            <param name="receiverId">接收人标志</param>
            <param name="mediaId">文件的mediaId</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.KFApi.SendVoice(System.String,Senparc.Weixin.Work.KF_User_Type,System.String,Senparc.Weixin.Work.KF_User_Type,System.String,System.String,System.Int32)">
            <summary>
            发送语音信息
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="senderType">发送人类型</param>
            <param name="senderId">发送人标志</param>
            <param name="receiverType">接收人类型</param>
            <param name="receiverId">接收人标志</param>
            <param name="mediaId">语音的mediaId</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.KFApi.GetKFList(System.String,System.Nullable{Senparc.Weixin.Work.KF_Type},System.Int32)">
            <summary>
            获取客服列表
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="type">不填时，同时返回内部、外部客服列表</param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.KF.GetKFListResult">
            <summary>
            客服返回结果
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.LoginAuth.GetLoginInfoResult">
            <summary>
            获取企业号管理员登录信息返回结果
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.LoginAuth.GetLoginInfoResult.usertype">
            <summary>
            登录用户的类型：1.创建者 2.内部系统管理员 3.外部系统管理员 4.分级管理员
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.LoginAuth.GetLoginInfoResult.user_info">
            <summary>
            登录管理员的信息
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.LoginAuth.GetLoginInfoResult.corp_info">
            <summary>
            授权方企业信息
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.LoginAuth.GetLoginInfoResult.agent">
            <summary>
            该管理员在该提供商中能使用的应用列表
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.LoginAuth.GetLoginInfoResult.auth_info">
            <summary>
            该管理员拥有的通讯录权限
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.LoginAuth.LoginInfo_UserInfo.email">
            <summary>
            管理员邮箱
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.LoginAuth.LoginInfo_UserInfo.userid">
            <summary>
            该管理员的userid（仅为内部管理员时展示）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.LoginAuth.LoginInfo_UserInfo.name">
            <summary>
            该管理员的名字（仅为内部管理员时展示）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.LoginAuth.LoginInfo_UserInfo.avatar">
            <summary>
            该管理员的头像（仅为内部管理员时展示）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.LoginAuth.LoginInfo_CorpInfo.corpid">
            <summary>
            授权方企业号id
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.LoginAuth.LoginInfo_AgentItem.agentid">
            <summary>
            应用id
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.LoginAuth.LoginInfo_AgentItem.auth_type">
            <summary>
            该管理员对应用的权限：1.管理权限，0.使用权限
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.LoginAuth.GetLoginUrlResult.login_url">
            <summary>
            登录跳转的url，一次性有效，不可多次使用
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.LoginAuth.GetLoginUrlResult.expires_in">
            <summary>
            url有效时长，单位为秒
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.LoginAuthApi.GetLoginUrl(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            获取企业号管理员登录信息【Work中未定义】
            </summary>
            <param name="providerAccessToken">服务提供商的accesstoken</param>
            <param name="loginTicket">通过get_login_info得到的login_ticket, 24小时有效</param>
            <param name="target">登录跳转到企业号后台的目标页面，目前有：agent_setting、send_msg、contact</param>
            <param name="agentid">授权方应用id</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.MailList.CreateDepartmentResult">
            <summary>
            创建部门返回结果
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.CreateDepartmentResult.id">
            <summary>
            创建的部门id
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.DepartmentList.id">
            <summary>
            部门id
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.DepartmentList.name">
            <summary>
            部门名称
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.DepartmentList.parentid">
            <summary>
            上级部门id
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.DepartmentList.order">
            <summary>
            在父部门中的次序值。order值小的排序靠前。
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.MailList.GetMemberResult">
            <summary>
            GetMemberResult【QY移植修改】
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.GetMemberResult.userid">
            <summary>
            员工UserID 
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.GetMemberResult.name">
            <summary>
            成员名称
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.GetMemberResult.department">
            <summary>
            成员所属部门id列表
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.GetMemberResult.order">
            <summary>
            部门内的排序值，默认为0。数量必须和department一致，数值越大排序越前面。值范围是[0, 2^32)
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.GetMemberResult.position">
            <summary>
            职位信息
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.GetMemberResult.mobile">
            <summary>
            手机号码
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.GetMemberResult.gender">
            <summary>
            性别。gender=0表示男，=1表示女 
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.GetMemberResult.email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.GetMemberResult.isleader">
            <summary>
            上级字段，标识是否为上级。第三方暂不支持
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.GetMemberResult.avatar">
            <summary>
            头像url。注：小图将url最后的"/0"改成"/64"
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.GetMemberResult.status">
            <summary>
            激活状态: 1=已激活，2=已禁用，4=未激活 已激活代表已激活企业微信或已关注微信插件。未激活代表既未激活企业微信又未关注微信插件。
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.GetMemberResult.telephone">
            <summary>
            座机。第三方暂不支持
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.GetMemberResult.english_name">
            <summary>
            英文名。第三方暂不支持
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.GetMemberResult.extattr">
            <summary>
            扩展属性
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.GetMemberResult.enable">
            <summary>
            启用/禁用成员，第三方不可获取。1表示启用成员，0表示禁用成员
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.GetMemberResult.wxplugin_status">
            <summary>
            关注微信插件的状态: 1=已关注，0=未关注
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.GetDepartmentMemberResult.userlist">
            <summary>
            成员列表
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.MailList.UserList_Simple">
            <summary>
            UserList_Simple【QY移植修改】
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.UserList_Simple.userid">
            <summary>
            员工UserID
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.UserList_Simple.name">
            <summary>
            成员名称
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.UserList_Simple.department">
            <summary>
            成员所属部门
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.MailList.Extattr">
            <summary>
            扩展属性
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.MailList.GetDepartmentMemberInfoResult">
            <summary>
            获取部门成员(详情)返回结果
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.GetDepartmentMemberInfoResult.userlist">
            <summary>
            成员列表
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.InviteMemberResult.type">
            <summary>
            1:微信邀请 2.邮件邀请
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.MailList.CreateTagResult">
            <summary>
            创建标签返回结果
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.CreateTagResult.tagid">
            <summary>
            标签id
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.MailList.GetTagMemberResult">
            <summary>
            获取标签成员返回结果
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.GetTagMemberResult.userlist">
            <summary>
            成员列表
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.GetTagMemberResult.partylist">
            <summary>
            部门列表
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.Tag_UserList.userid">
            <summary>
            员工UserID
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.MailList.Tag_UserList.name">
            <summary>
            成员名称
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.MailList.AddTagMemberResult">
            <summary>
            添加标签成员返回结果
            a)正确时返回{"errcode": 0,"errmsg": "ok"}
            b)若部分userid非法，则返回{"errcode": 0,"errmsg": "invalid userlist failed","invalidlist"："usr1|usr2|usr","invalidparty"：[2,4]}
            c)当包含userid全部非法时返回{"errcode": 40070,"errmsg": "all list invalid "}
            其中错误消息视具体出错情况而定，分别为：
            invalid userlist and partylist faild
            invalid userlist faild
            invalid partylist faild
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.MailList.DelTagMemberResult">
            <summary>
            添加标签成员返回结果
            a)正确时返回{"errcode": 0,"errmsg": "ok"}
            b)若部分userid非法，则返回{"errcode": 0,"errmsg": "invalid userlist failed","invalidlist"："usr1|usr2|usr","invalidparty": [2,4]}
            c)当包含userid全部非法时返回{"errcode": 40070,"errmsg": "all list invalid "}
            invalid userlist and partylist faild
            invalid userlist faild
            invalid partylist faild
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.MailList.GetTagListResult">
            <summary>
            获取标签列表返回结果
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MailListApi.CreateMember(System.String,System.String,System.String,System.String,System.String,System.Int64[],System.Int32[],System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},Senparc.Weixin.Work.AdvancedAPIs.MailList.Extattr,System.Int32)">
            <summary>
            创建成员(mobile/weixinid/email三者不能同时为空)【QY移植修改】
            文档：http://work.weixin.qq.com/api/doc#10018
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="userId">员工UserID。必须企业内唯一</param>
            <param name="name">成员名称。长度为1~64个字符</param>
            <param name="englishName">（非必须）英文名。长度为1-64个字节。第三方暂不支持</param>
            <param name="department">成员所属部门id列表。注意，每个部门的直属员工上限为1000个</param>
            <param name="order">部门内的排序值，默认为0。数量必须和department一致，数值越大排序越前面。第三方暂不支持</param>
            <param name="position">职位信息。长度为0~64个字符</param>
            <param name="mobile">手机号码。必须企业内唯一</param>
            <param name="telephone">座机。长度0-64个字节。第三方暂不支持</param>
            <param name="email">邮箱。长度为0~64个字符。必须企业内唯一</param>
            <param name="gender">性别。gender=0表示男，=1表示女。默认gender=0（QY由此说明，Work无）</param>
            <param name="avatarMediaid"></param>
            <param name="extattr">扩展属性。扩展属性需要在WEB管理端创建后才生效，否则忽略未知属性的赋值</param>
            <param name="isLeader">（非必填）上级字段，标识是否为上级（1为是，0为否）。第三方暂不支持</param>
            <param name="enable">（非必填）</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MailListApi.GetMember(System.String,System.String)">
            <summary>
            获取成员
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="userId">员工UserID</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MailListApi.UpdateMember(System.String,System.String,System.String,System.String,System.String,System.Int64[],System.Int32[],System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},Senparc.Weixin.Work.AdvancedAPIs.MailList.Extattr,System.Int32)">
            <summary>
            更新成员(mobile/weixinid/email三者不能同时为空)【QY移植修改】
            权限说明：系统应用须拥有指定部门、成员的管理权限。注意，每个部门下的节点不能超过3万个。
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="userId">员工UserID。必须企业内唯一</param>
            <param name="name">成员名称。长度为1~64个字符</param>
            <param name="department">成员所属部门id列表。注意，每个部门的直属员工上限为1000个</param>
            <param name="position">职位信息。长度为0~64个字符</param>
            <param name="mobile">手机号码。必须企业内唯一</param>
            <param name="email">邮箱。长度为0~64个字符。必须企业内唯一</param>
            <param name="weixinId">微信号。必须企业内唯一</param>
            <param name="enable">启用/禁用成员。1表示启用成员，0表示禁用成员</param>
            <param name="avatarMediaid"></param>
            <param name="extattr">扩展属性。扩展属性需要在WEB管理端创建后才生效，否则忽略未知属性的赋值</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            accessToken和userId为必须的参数，其余参数不是必须的，可以传入null
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MailListApi.DeleteMember(System.String,System.String)">
            <summary>
            删除成员【QY移植修改】
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="userId">员工UserID</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MailListApi.BatchDeleteMember(System.String,System.String[],System.Int32)">
            <summary>
            批量删除成员【QY移植修改】
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="useridlist">成员UserID列表。对应管理端的帐号</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MailListApi.GetDepartmentMember(System.String,System.Int64,System.Int32,System.Nullable{System.Int32})">
            <param name="maxJsonLength">设置 JavaScriptSerializer 类接受的 JSON 字符串的最大长度</param>
            <remarks>
            2016-04-16：Zeje添加参数maxJsonLength：企业号通讯录扩容后，存在Json长度不够的情况。
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MailListApi.GetDepartmentMemberInfo(System.String,System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            获取部门成员(详情)【QY移植修改】
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="departmentId">获取的部门id</param>
            <param name="fetchChild">（）1/0：是否递归获取子部门下面的成员</param>
            <param name="maxJsonLength">设置 JavaScriptSerializer 类接受的 JSON 字符串的最大长度</param>
            <remarks>
            2016-05-03：Zeje添加参数maxJsonLength：企业号通讯录扩容后，存在Json长度不够的情况。
            </remarks>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Senparc.Weixin.Work.AdvancedAPIs.MailListApi.CreateDepartment(System.String,System.String,System.Int64,System.Int32,System.Nullable{System.Int64},System.Int32)”忽略有格式错误的 XML 注释 -->
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MailListApi.UpdateDepartment(System.String,System.Int64,System.String,System.Int64,System.Int32,System.Int32)">
            <summary>
            更新部门【QY移植修改】
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="id">部门id</param>
            <param name="name">更新的部门名称。长度限制为0~64个字符。修改部门名称时指定该参数</param>
            <param name="parentId">父亲部门id。根部门id为1 </param>
            <param name="order">在父部门中的次序。从1开始，数字越大排序越靠后</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MailListApi.DeleteDepartment(System.String,System.Int64)">
            <summary>
            删除部门【QY移植修改】
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="id">部门id。（注：不能删除根部门；不能删除含有子部门、成员的部门）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MailListApi.GetDepartmentList(System.String,System.Nullable{System.Int64})">
            <summary>
            获取部门列表【QY移植修改】
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="id">部门id。获取指定部门及其下的子部门。 如果不填，默认获取全量组织架构</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MailListApi.CreateTag(System.String,System.String,System.Nullable{System.Int32},System.Int32)">
            <summary>
            创建标签【QY移植修改】
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="tagName">标签名称。长度为1~64个字符，标签不可与其他同组的标签重名，也不可与全局标签重名</param>
            <param name="tagId">标签id，非负整型，指定此参数时新增的标签会生成对应的标签id，不指定时则以目前最大的id自增。</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MailListApi.UpdateTag(System.String,System.Int32,System.String,System.Int32)">
            <summary>
            更新标签名字【QY移植修改】
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="tagId">标签ID</param>
            <param name="tagName">标签名称。长度为0~64个字符</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MailListApi.DeleteTag(System.String,System.Int32)">
            <summary>
            删除标签【QY移植修改】
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="tagId">标签ID</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MailListApi.GetTagMember(System.String,System.Int32)">
            <summary>
            获取标签成员【QY移植修改】
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="tagId">标签ID</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MailListApi.AddTagMember(System.String,System.Int32,System.String[],System.Int64[],System.Int32)">
            <summary>
            增加标签成员【QY移植修改】
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="tagId">标签ID</param>
            <param name="userList">企业成员ID列表，注意：userlist、partylist不能同时为空</param>
            <param name="partyList">企业部门ID列表，注意：userlist、partylist不能同时为空</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MailListApi.DelTagMember(System.String,System.Int32,System.String[],System.Int64[],System.Int32)">
            <summary>
            删除标签成员【QY移植修改】
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="tagId">标签ID</param>
            <param name="userList">企业成员ID列表，注意：userlist、partylist不能同时为空</param>
            <param name="partylist">企业部门ID列表，注意：userlist、partylist不能同时为空</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MailListApi.GetTagList(System.String)">
            <summary>
            获取标签列表【QY移植修改】
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MailListApi.InviteMember(System.String,System.String,System.Int32)">
            <summary>
            【Work中未定义】邀请成员关注
            认证号优先使用微信推送邀请关注，如果没有weixinid字段则依次对手机号，邮箱绑定的微信进行推送，全部没有匹配则通过邮件邀请关注。 邮箱字段无效则邀请失败。 非认证号只通过邮件邀请关注。邮箱字段无效则邀请失败。 已关注以及被禁用用户不允许发起邀请关注请求。
            测试发现同一个邮箱只发送一封邀请关注邮件，第二次再对此邮箱发送微信会提示系统错误
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="userId">用户的userid</param>
            <param name="inviteTips">推送到微信上的提示语（只有认证号可以使用）。当使用微信推送时，该字段默认为“请关注XXX企业号”，邮件邀请时，该字段无效。</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.MassApi">
            <summary>
            发送消息
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MassApi.SendText(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            发送文本信息【QY移植修改】
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="toUser">UserID列表（消息接收者，多个接收者用‘|’分隔）。特殊情况：指定为@all，则向关注该企业应用的全部成员发送</param>
            <param name="toParty">PartyID列表，多个接受者用‘|’分隔。当touser为@all时忽略本参数</param>
            <param name="toTag">TagID列表，多个接受者用‘|’分隔。当touser为@all时忽略本参数</param>
            <param name="agentId">企业应用的id，可在应用的设置页面查看</param>
            <param name="content">消息内容</param>
            <param name="safe">表示是否是保密消息，0表示否，1表示是，默认0</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MassApi.SendImage(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            发送图片消息【QY移植修改】
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="toUser">UserID列表（消息接收者，多个接收者用‘|’分隔）。特殊情况：指定为@all，则向关注该企业应用的全部成员发送</param>
            <param name="toParty">PartyID列表，多个接受者用‘|’分隔。当touser为@all时忽略本参数</param>
            <param name="toTag"></param>
            <param name="agentId">企业应用的id，可在应用的设置页面查看</param>
            <param name="mediaId">媒体资源文件ID</param>
            <param name="safe">表示是否是保密消息，0表示否，1表示是，默认0</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MassApi.SendVoice(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            发送语音消息【QY移植修改】
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="toUser">UserID列表（消息接收者，多个接收者用‘|’分隔）。特殊情况：指定为@all，则向关注该企业应用的全部成员发送</param>
            <param name="toParty">PartyID列表，多个接受者用‘|’分隔。当touser为@all时忽略本参数</param>
            <param name="toTag">TagID列表，多个接受者用‘|’分隔。当touser为@all时忽略本参数</param>
            <param name="agentId">企业应用的id，可在应用的设置页面查看</param>
            <param name="mediaId">媒体资源文件ID</param>
            <param name="safe">表示是否是保密消息，0表示否，1表示是，默认0</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MassApi.SendVideo(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            发送视频消息【QY移植修改】
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="toUser">UserID列表（消息接收者，多个接收者用‘|’分隔）。特殊情况：指定为@all，则向关注该企业应用的全部成员发送</param>
            <param name="toParty">PartyID列表，多个接受者用‘|’分隔。当touser为@all时忽略本参数</param>
            <param name="toTag">TagID列表，多个接受者用‘|’分隔。当touser为@all时忽略本参数</param>
            <param name="agentId">企业应用的id，可在应用的设置页面查看</param>
            <param name="mediaId">媒体资源文件ID</param>
            <param name="title">视频消息的标题</param>
            <param name="description">视频消息的描述</param>
            <param name="safe">表示是否是保密消息，0表示否，1表示是，默认0</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MassApi.SendFile(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            发送文件消息【QY移植修改】
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="toUser">UserID列表（消息接收者，多个接收者用‘|’分隔）。特殊情况：指定为@all，则向关注该企业应用的全部成员发送</param>
            <param name="toParty">PartyID列表，多个接受者用‘|’分隔。当touser为@all时忽略本参数</param>
            <param name="toTag">TagID列表，多个接受者用‘|’分隔。当touser为@all时忽略本参数</param>
            <param name="agentId">企业应用的id，可在应用的设置页面查看</param>
            <param name="mediaId">媒体资源文件ID</param>
            <param name="safe">表示是否是保密消息，0表示否，1表示是，默认0</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MassApi.SendNews(System.String,System.String,System.Collections.Generic.List{Senparc.Weixin.Work.Entities.Article},System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            发送图文消息【QY移植修改】
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="toUser">UserID列表（消息接收者，多个接收者用‘|’分隔）。特殊情况：指定为@all，则向关注该企业应用的全部成员发送</param>
            <param name="toParty">PartyID列表，多个接受者用‘|’分隔。当touser为@all时忽略本参数</param>
            <param name="toTag">TagID列表，多个接受者用‘|’分隔。当touser为@all时忽略本参数</param>
            <param name="agentId">企业应用的id，可在应用的设置页面查看</param>
            <param name="articles">图文信息内容，包括title（标题）、description（描述）、url（点击后跳转的链接。企业可根据url里面带的code参数校验员工的真实身份）和picurl（图文消息的图片链接，支持JPG、PNG格式，较好的效果为大图640*320，小图80*80。如不填，在客户端不显示图片）</param>
            <param name="safe">表示是否是保密消息，0表示否，1表示是，默认0</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MassApi.SendMpNews(System.String,System.String,System.Collections.Generic.List{Senparc.Weixin.Work.Entities.MpNewsArticle},System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            发送mpnews消息【QY移植修改】
            注：mpnews消息与news消息类似，不同的是图文消息内容存储在微信后台，并且支持保密选项。
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="toUser">UserID列表（消息接收者，多个接收者用‘|’分隔）。特殊情况：指定为@all，则向关注该企业应用的全部成员发送</param>
            <param name="toParty">PartyID列表，多个接受者用‘|’分隔。当touser为@all时忽略本参数</param>
            <param name="toTag">TagID列表，多个接受者用‘|’分隔。当touser为@all时忽略本参数</param>
            <param name="agentId">企业应用的id，可在应用的设置页面查看</param>
            <param name="articles"></param>
            <param name="safe">表示是否是保密消息，0表示否，1表示是，默认0</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MassApi.SendTextCard(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            发送textcard消息
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="toUser">UserID列表（消息接收者，多个接收者用‘|’分隔）。特殊情况：指定为@all，则向关注该企业应用的全部成员发送</param>
            <param name="toParty">PartyID列表，多个接受者用‘|’分隔。当touser为@all时忽略本参数</param>
            <param name="toTag">TagID列表，多个接受者用‘|’分隔。当touser为@all时忽略本参数</param>
            <param name="agentId">企业应用的id，可在应用的设置页面查看</param>
            <param name="title">标题，不超过128个字节，超过会自动截断</param>
            <param name="description">描述，不超过512个字节，超过会自动截断</param>
            <param name="url">点击后跳转的链接</param>
            <param name="btntxt">按钮文字。 默认为“详情”， 不超过4个文字，超过自动截断。</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.Mass.MassResult">
            <summary>
            发送消息返回结果
            如果对应用或收件人、部门、标签任何一个无权限，则本次发送失败；如果收件人、部门或标签不存在，发送仍然执行，但返回无效的部分。
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.MediaApi">
            <summary>
            多媒体文件接口
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MediaApi.Upload(System.String,Senparc.Weixin.Work.UploadMediaFileType,System.String,System.Int32)">
            <summary>
            上传临时媒体文件【QY移植修改】
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="type">媒体文件类型，分别有图片（image）、语音（voice）、视频（video），普通文件(file)</param>
            <param name="media">form-data中媒体文件标识，有filename、filelength、content-type等信息</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MediaApi.Get(System.String,System.String,System.IO.Stream)">
            <summary>
            获取临时媒体文件【QY移植修改】
            权限说明：完全公开，media_id在同一企业内所有应用之间可以共享。
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="mediaId"></param>
            <param name="stream"></param>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MediaApi.Get(System.String,System.String,System.String)">
            <summary>
            获取临时媒体文件并保存到指定目录中
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="mediaId"></param>
            <param name="dir">保存目录</param>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MediaApi.AddMpNews(System.String,System.Int32,System.Int32,Senparc.Weixin.Work.Entities.MpNewsArticle[])">
            <summary>
            上传永久图文素材
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="agentId"></param>
            <param name="timeOut"></param>
            <param name="mpNewsArticles"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MediaApi.AddMaterial(System.String,Senparc.Weixin.Work.UploadMediaFileType,System.Int32,System.String,System.Int32)">
            <summary>
            上传其他类型永久素材
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="type"></param>
            <param name="agentId"></param>
            <param name="media"></param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MediaApi.GetForeverMpNews(System.String,System.Int32,System.String)">
            <summary>
            获取永久图文素材
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="agentId"></param>
            <param name="mediaId"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MediaApi.GetForeverMaterial(System.String,System.Int32,System.String,System.IO.Stream)">
            <summary>
            获取临时媒体文件
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="agentId"></param>
            <param name="mediaId"></param>
            <param name="stream"></param>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MediaApi.DeleteForeverMaterial(System.String,System.Int32,System.String)">
            <summary>
            删除永久素材
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="agentId"></param>
            <param name="mediaId"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MediaApi.UpdateMpNews(System.String,System.String,System.Int32,System.Int32,Senparc.Weixin.Work.Entities.MpNewsArticle[])">
            <summary>
            修改永久图文素材
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="mediaId"></param>
            <param name="agentId"></param>
            <param name="timeOut"></param>
            <param name="mpNewsArticles"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MediaApi.GetCount(System.String,System.Int32)">
            <summary>
            获取素材总数
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="agentId"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MediaApi.BatchGetMaterial(System.String,Senparc.Weixin.Work.UploadMediaFileType,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            获取素材列表
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="type"></param>
            <param name="agentId"></param>
            <param name="offset"></param>
            <param name="count"></param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.MediaApi.UploadimgMedia(System.String,System.String,System.Int32)">
            <summary>
            上传图文消息内的图片
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="media"></param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.Media.GetForeverMpNewsResult">
            <summary>
            获取永久图文素材返回结果
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Media.GetForeverMpNewsResult.type">
            <summary>
            类型
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.Media.GetCountResult">
            <summary>
            获取素材总数返回结果
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Media.GetCountResult.total_count">
            <summary>
            应用素材总数目
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Media.GetCountResult.image_count">
            <summary>
            图片素材总数目
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Media.GetCountResult.voice_count">
            <summary>
            音频素材总数目
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Media.GetCountResult.video_count">
            <summary>
            视频素材总数目
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Media.GetCountResult.file_count">
            <summary>
            文件素材总数目
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Media.GetCountResult.mpnews_count">
            <summary>
            图文素材总数目
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.Media.BatchGetMaterialResult">
            <summary>
            获取素材列表返回结果
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Media.BatchGetMaterialResult.type">
            <summary>
            素材类型，可以为图文(mpnews)、图片（image）、音频（voice）、视频（video）、文件（file）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Media.BatchGetMaterialResult.total_count">
            <summary>
            应用该类型素材总数目
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Media.BatchGetMaterialResult.item_count">
            <summary>
            返回该类型素材数目
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Media.BatchGetMaterialResult.itemlist">
            <summary>
            素材列表
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Media.BatchGetMaterial_Item.media_id">
            <summary>
            素材的媒体id
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Media.BatchGetMaterial_Item.filename">
            <summary>
            文件名
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Media.BatchGetMaterial_Item.update_time">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Media.BatchGetMaterial_Item.articles">
            <summary>
            图文消息，一个图文消息支持1到10个图文
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.Media.UploadimgMediaResult.url">
            <summary>
            图片url，可放置于图文消息中的正文
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.Media.UploadTemporaryResultJson">
            <summary>
            上传临时媒体文件返回结果
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.Media.UploadForeverResultJson">
            <summary>
            上传永久素材返回结果
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenApi">
            <summary>
            OA数据开放接口
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenApi.OpenCheckinDataType">
            <summary>
            打卡类型
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenApi.GetCheckinData(System.String,Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenApi.OpenCheckinDataType,System.DateTime,System.DateTime,System.String[],System.Int32)">
            <summary>
            获取打卡数据【QY移植新增】
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="openCheckinDataType">打卡类型</param>
            <param name="startTime">获取打卡记录的开始时间</param>
            <param name="endTime">获取打卡记录的结束时间</param>
            <param name="userIdList">需要获取打卡记录的用户列表</param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenApi.GetCheckinOption(System.String,System.DateTime,System.String[],System.Int32)">
            <summary>
            获取打卡规则
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="datetime">需要获取规则的日期当天0点的Unix时间戳</param>
            <param name="userIdList">需要获取打卡规则的用户列表</param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenApi.GetApprovalData(System.String,System.DateTime,System.DateTime,System.Int64,System.Int32)">
            <summary>
            获取审批数据【QY移植新增】
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="startTime">获取打卡记录的开始时间</param>
            <param name="endTime">获取打卡记录的结束时间</param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetApprovalDataJsonResult.count">
            <summary>
            拉取的审批单个数，最大值为10000
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetApprovalDataJsonResult.total">
            <summary>
            时间段内的总审批单个数
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetApprovalDataJsonResult.next_spnum">
            <summary>
            拉取列表的最后一个审批单号
            附：时间段内审批单数量超过10000时：
            当时间段内审批单超过10000时，可通过填写next_spnum的值，从而多次拉取列表的方式来满足需求。
            具体而言，就是在调用接口时，将上一次调用得到的返回中的next_spnum值，作为下一次调用中的next_spnum值。
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetApprovalDataJsonResult.data">
            <summary>
            数据
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetApprovalDataJsonResult_Data.spname">
            <summary>
            审批名称(请假，报销，自定义审批名称)
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetApprovalDataJsonResult_Data.apply_name">
            <summary>
            申请人姓名
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetApprovalDataJsonResult_Data.apply_org">
            <summary>
            申请人部门
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetApprovalDataJsonResult_Data.approval_name">
            <summary>
            审批人姓名
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetApprovalDataJsonResult_Data.notify_name">
            <summary>
            抄送人姓名
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetApprovalDataJsonResult_Data.sp_status">
            <summary>
            审批状态：1审批中；2 已通过；3已驳回；4已取消
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetApprovalDataJsonResult_Data.sp_num">
            <summary>
            审批单号
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetApprovalDataJsonResult_Data.expense">
            <summary>
            报销类型
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetApprovalDataJsonResult_Data.leave">
            <summary>
            leave
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetApprovalDataJsonResult_Data.comm">
            <summary>
            自定义审批模版
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetApprovalDataJsonResult_Data_Expense.expense_type">
            <summary>
            报销类型：1差旅费；2交通费；3招待费；4其他报销
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetApprovalDataJsonResult_Data_Expense.reason">
            <summary>
            报销事由
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetApprovalDataJsonResult_Data_Expense.item">
            <summary>
            报销明细
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetApprovalDataJsonResult_Data_Expense_Item.expenseitem_type">
            <summary>
            费用类型：1飞机票；2火车票；3的士费；4住宿费；5餐饮费；6礼品费；7活动费；8通讯费；9补助；10其他
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetApprovalDataJsonResult_Data_Expense_Item.time">
            <summary>
            发生时间，unix时间 //PS：官方文档：发生事件，unix时间
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetApprovalDataJsonResult_Data_Expense_Item.sums">
            <summary>
            费用金额，单位元
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetApprovalDataJsonResult_Data_Expense_Item.reason">
            <summary>
            明细事由
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetApprovalDataJsonResult_Data_Leave.timeunit">
            <summary>
            请假时间单位：0半天；1小时
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetApprovalDataJsonResult_Data_Leave.leave_type">
            <summary>
            请假类型：1年假；2事假；3病假；4调休假；5婚假；6产假；7陪产假；8其他
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetApprovalDataJsonResult_Data_Leave.start_time">
            <summary>
            请假开始时间，unix时间
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetApprovalDataJsonResult_Data_Leave.end_time">
            <summary>
            请假结束时间，unix时间
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetApprovalDataJsonResult_Data_Leave.duration">
            <summary>
            请假时长，单位小时
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetApprovalDataJsonResult_Data_Leave.reason">
            <summary>
            	 
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetApprovalDataJsonResult_Data_Comm.apply_data">
            <summary>
            自定义审批申请的单据数据，请参考官方文档【注解1】：http://work.weixin.qq.com/api/doc#11228。
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetCheckinDataJsonResult.checkindata">
            <summary>
            打卡数据
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetCheckinDataJsonResult_Result.userid">
            <summary>
            用户id
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetCheckinDataJsonResult_Result.groupname">
            <summary>
            打卡规则名称
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetCheckinDataJsonResult_Result.checkin_type">
            <summary>
            打卡类型
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetCheckinDataJsonResult_Result.exception_type">
            <summary>
            异常类型，如果有多个异常，以分号间隔
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetCheckinDataJsonResult_Result.checkin_time">
            <summary>
            打卡时间。UTC时间戳
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetCheckinDataJsonResult_Result.location_title">
            <summary>
            打卡地点title
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetCheckinDataJsonResult_Result.location_detail">
            <summary>
            打卡地点详情
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetCheckinDataJsonResult_Result.wifiname">
            <summary>
            打卡wifi名称
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetCheckinDataJsonResult_Result.notes">
            <summary>
            打卡备注
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetCheckinDataJsonResult_Result.wifimac">
            <summary>
            打卡的MAC地址/bssid
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.GetCheckinDataJsonResult_Result.mediaids">
            <summary>
            打卡的附件media_id，可使用media/get获取附件
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.GetCheckinOptionJsonResult">
            <summary>
            企业微信 获取打卡规则 接口返回结果
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Info.userid">
            <summary>
            用户id
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Group.grouptype">
            <summary>
            打卡规则类型。1：固定时间上下班；2：按班次上下班；3：自由上下班 。
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Group.groupid">
            <summary>
            打卡规则id
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Group.checkindate">
            <summary>
            打卡时间
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Group.spe_workdays">
            <summary>
            特殊日期
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Group.sync_holidays">
            <summary>
            是否同步法定节假日
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Group.groupname">
            <summary>
            打卡规则名称
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Group.need_photo">
            <summary>
            是否打卡必须拍照
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Group.wifimac_infos">
            <summary>
            WiFi打卡地点信息
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Group.note_can_use_local_pic">
            <summary>
            是否备注时允许上传本地图片
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Group.allow_checkin_offworkday">
            <summary>
            是否非工作日允许打卡
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Group.allow_apply_offworkday">
            <summary>
            是否允许异常打卡时提交申请
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Group.loc_infos">
            <summary>
            位置打卡地点信息
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Checkindate.workdays">
            <summary>
            工作日。若为固定时间上下班或按班次上下班，则1到7分别表示星期一到星期日；若为按班次上下班，则表示拉取班次的日期。
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Checkindate.flex_time">
            <summary>
            弹性时间（毫秒）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Checkindate.noneed_offwork">
            <summary>
            下班不需要打卡
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Checkindate.limit_aheadtime">
            <summary>
            打卡时间限制（毫秒）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Checkintime.work_sec">
            <summary>
            上班时间，表示为距离当天0点的秒数。
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Checkintime.off_work_sec">
            <summary>
            下班时间，表示为距离当天0点的秒数。
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Checkintime.remind_work_sec">
            <summary>
            上班提醒时间，表示为距离当天0点的秒数。
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Checkintime.remind_off_work_sec">
            <summary>
            下班提醒时间，表示为距离当天0点的秒数。
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Spe_Workdays.timestamp">
            <summary>
            特殊日期具体时间
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Spe_Workdays.notes">
            <summary>
            特殊日期备注
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Wifimac_Infos.wifiname">
            <summary>
            WiFi打卡地点名称
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Wifimac_Infos.wifimac">
            <summary>
            WiFi打卡地点MAC地址/bssid
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Loc_Infos.lat">
            <summary>
            位置打卡地点经度
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Loc_Infos.lng">
            <summary>
            位置打卡地点纬度
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Loc_Infos.loc_title">
            <summary>
            位置打卡地点名称
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Loc_Infos.loc_detail">
            <summary>
            位置打卡地点详情
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OaDataOpen.OaDataOpenJson.Loc_Infos.distance">
            <summary>
            允许打卡范围（米）
            </summary>
        </member>
        <!-- 对于成员“M:Senparc.Weixin.Work.AdvancedAPIs.OAuth2Api.GetCode(System.String,System.String,System.String,System.String,System.String,System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.OAuth2Api.GetUserId(System.String,System.String,System.String)">
            <summary>
            获取成员信息
            </summary>
            <param name="accessToken">调用接口凭证</param>
            <param name="code">通过员工授权获取到的code，每次员工授权带上的code将不一样，code只能使用一次，5分钟未被使用自动过期</param>
            权限说明：管理员须拥有agent的使用权限；agentid必须和跳转链接时所在的企业应用ID相同。
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.OAuth2Api.GetUserId(System.String,System.String)">
            <summary>
            获取成员信息
            </summary>
            <param name="accessToken">调用接口凭证</param>
            <param name="code">通过员工授权获取到的code，每次员工授权带上的code将不一样，code只能使用一次，5分钟未被使用自动过期</param>
            权限说明：管理员须拥有agent的使用权限；agentid必须和跳转链接时所在的企业应用ID相同。
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.OAuth2Api.GetUserDetail(System.String,System.String)">
            <summary>
            使用user_ticket获取成员详情
            官方文档：http://work.weixin.qq.com/api/doc#10028
            </summary>
            <param name="accessToken"></param>
            <param name="userTicket">成员票据</param>
            <returns></returns>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.OAuth2.GetUserInfoResult">
            <summary>
            获取成员信息返回结果
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OAuth2.GetUserInfoResult.UserId">
            <summary>
            员工UserID
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OAuth2.GetUserInfoResult.OpenId">
            <summary>
            非企业成员的OpenId
            （此属性在Work最新文档中没有）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OAuth2.GetUserInfoResult.DeviceId">
            <summary>
            手机设备号(由微信在安装时随机生成) 
            （此属性在Work最新文档中没有）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OAuth2.GetUserInfoResult.user_ticket">
            <summary>
            成员票据，最大为512字节。
            scope为snsapi_userinfo或snsapi_privateinfo，且用户在应用可见范围之内时返回此参数。
            后续利用该参数可以获取用户信息或敏感信息。
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OAuth2.GetUserInfoResult.expires_in">
            <summary>
            user_token的有效时间（秒），随user_ticket一起返回
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.OAuth2.GetUserDetailResult">
            <summary>
            "使用user_ticket获取成员详情"接口返回结果
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OAuth2.GetUserDetailResult.userid">
            <summary>
            成员UserID
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OAuth2.GetUserDetailResult.name">
            <summary>
            成员姓名
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OAuth2.GetUserDetailResult.department">
            <summary>
            成员所属部门
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OAuth2.GetUserDetailResult.position">
            <summary>
            职位信息
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OAuth2.GetUserDetailResult.mobile">
            <summary>
            成员手机号，仅在用户同意snsapi_privateinfo授权时返回
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OAuth2.GetUserDetailResult.gender">
            <summary>
            性别。0表示未定义，1表示男性，2表示女性
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OAuth2.GetUserDetailResult.email">
            <summary>
            成员邮箱，仅在用户同意snsapi_privateinfo授权时返回
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.OAuth2.GetUserDetailResult.avatar">
            <summary>
            头像url。注：如果要获取小图将url最后的”/0”改成”/64”即可
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.ShakeAroundApi.GetSuiteToken(System.String,System.String,System.Int32)">
            <summary>
            获取设备及用户信息
            </summary>
            <param name="accessTokenOrAppKey">调用接口凭证（AccessToken）或AppKey（根据AccessTokenContainer.BuildingKey(corpId, corpSecret)方法获得）</param>
            <param name="ticket">摇周边业务的ticket，可在摇到的URL中得到，ticket生效时间为30分钟，每一次摇都会重新生成新的ticket</param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.ShakeAround.GetShakeInfoResult">
            <summary>
            获取设备及用户信息返回结果
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ShakeAround.ShakeInfo_Data.page_id">
            <summary>
            摇周边页面唯一ID
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ShakeAround.ShakeInfo_Data.beacon_info">
            <summary>
            设备信息，包括UUID、major、minor，以及距离
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ShakeAround.ShakeInfo_Data.userid">
            <summary>
            企业号成员的userid
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ShakeAround.ShakeInfo_Data.openid">
            <summary>
            企业号父号下用户的openid，非企业关注成员的标识，对当前企业号唯一
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ShakeAround.BeaconInfo.distance">
            <summary>
            Beacon信号与手机的距离，单位为米
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ShakeAround.BeaconInfo.uuid">
            <summary>
            UUID
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.SSO.SsoApi">
            <summary>
            单点登录接口
            </summary>
        </member>
        <!-- 对于成员“M:Senparc.Weixin.Work.AdvancedAPIs.SSO.SsoApi.GetLoginAuthUrl(System.String,System.String,System.String,Senparc.Weixin.Work.Login_User_Type)”忽略有格式错误的 XML 注释 -->
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.SSO.SsoApi.GetProviderToken(System.String,System.String,System.Int32)">
            <summary>
            获取登录用户信息【QY移植修改】
            </summary>
            <param name="corpId"></param>
            <param name="providerSecret"></param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.SSO.SsoApi.GetLoginInfo(System.String,System.String,System.Int32)">
            <summary>
            获取登录用户信息【QY移植修改】
            </summary>
            <param name="providerAccessToken">服务提供商的accesstoken</param>
            <param name="authCode">oauth2.0授权企业号管理员登录产生的code</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.SSO.GetLoginInfoResult">
            <summary>
            获取企业号管理员登录信息返回结果
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.SSO.GetLoginInfoResult.usertype">
            <summary>
            登录用户的类型：1.创建者 2.内部系统管理员 3.外部系统管理员 4.分级管理员
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.SSO.GetLoginInfoResult.user_info">
            <summary>
            登录管理员的信息
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.SSO.GetLoginInfoResult.corp_info">
            <summary>
            授权方企业信息
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.SSO.GetLoginInfoResult.agent">
            <summary>
            该管理员在该提供商中能使用的应用列表
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.SSO.GetLoginInfoResult.auth_info">
            <summary>
            该管理员拥有的通讯录权限
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.SSO.LoginInfo_UserInfo.email">
            <summary>
            管理员邮箱
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.SSO.LoginInfo_UserInfo.userid">
            <summary>
            该管理员的userid（仅为内部管理员时展示）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.SSO.LoginInfo_UserInfo.name">
            <summary>
            该管理员的名字（仅为内部管理员时展示）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.SSO.LoginInfo_UserInfo.avatar">
            <summary>
            该管理员的头像（仅为内部管理员时展示）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.SSO.LoginInfo_CorpInfo.corpid">
            <summary>
            授权方企业号id
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.SSO.LoginInfo_AgentItem.agentid">
            <summary>
            应用id
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.SSO.LoginInfo_AgentItem.auth_type">
            <summary>
            该管理员对应用的权限：1.管理权限，0.使用权限
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.SSO.GetLoginUrlResult.login_url">
            <summary>
            登录跳转的url，一次性有效，不可多次使用
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.SSO.GetLoginUrlResult.expires_in">
            <summary>
            url有效时长，单位为秒
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuthApi.GetSuiteToken(System.String,System.String,System.String,System.Int32)">
            <summary>
            获取应用套件令牌【QY移植修改】
            </summary>
            <param name="suiteId">应用套件id</param>
            <param name="suiteSecret">应用套件secret</param>
            <param name="suiteTicket">微信后台推送的ticket</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuthApi.GetPreAuthCode(System.String,System.String,System.Int32)">
            <summary>
            获取预授权码【QY移植修改】
            </summary>
            <param name="suiteAccessToken"></param>
            <param name="suiteId">应用套件id</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuthApi.SetAuthConfig(System.String,System.String,System.Int32[],System.Nullable{System.Int32},System.Int32)">
            <summary>
            设置授权配置【QY移植修改】
            </summary>
            <param name="suiteAccessToken"></param>
            <param name="authCode">预授权码</param>
            <param name="appid">允许进行授权的应用id，如1、2、3， 不填或者填空数组都表示允许授权套件内所有应用 </param>
            <param name="auth_type">授权类型：0 正式授权， 1 测试授权， 默认值为0 </param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuthApi.GetPermanentCode(System.String,System.String,System.String,System.Int32)">
            <summary>
            获取企业号的永久授权码【QY移植修改】
            </summary>
            <param name="suiteAccessToken"></param>
            <param name="suiteId">应用套件id</param>
            <param name="authCode">临时授权码会在授权成功时附加在redirect_uri中跳转回应用提供商网站。</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuthApi.GetAuthInfo(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            获取企业授权信息【QY移植修改】
            </summary>
            <param name="suiteAccessToken"></param>
            <param name="suiteId">应用套件id</param>
            <param name="authCorpId">授权方corpid</param>
            <param name="permanentCode">永久授权码，通过get_permanent_code获取</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuthApi.GetAgent(System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            获取企业号应用【Work中未定义】
            </summary>
            <param name="suiteAccessToken"></param>
            <param name="suiteId">应用套件id</param>
            <param name="authCorpId">授权方corpid</param>
            <param name="permanentCode">永久授权码，从get_permanent_code接口中获取</param>
            <param name="agentId">授权方应用id</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuthApi.SetAgent(System.String,System.String,System.String,System.String,Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_AgentData,System.Int32)">
            <summary>
            设置企业号应用【Work中未定义】
            </summary>
            <param name="suiteAccessToken"></param>
            <param name="suiteId">应用套件id</param>
            <param name="authCorpId">授权方corpid</param>
            <param name="permanentCode">永久授权码，从get_permanent_code接口中获取</param>
            <param name="agent">要设置的企业应用的信息</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuthApi.GetCorpToken(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            获取企业access_token【QY移植修改】
            </summary>
            <param name="suiteAccessToken"></param>
            <param name="suiteId">应用套件id</param>
            <param name="authCorpId">授权方corpid</param>
            <param name="permanentCode">永久授权码，通过get_permanent_code获取</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.SessionInfo.appid">
            <summary>
            允许进行授权的应用id，如1、2、3
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_AgentData.agentid">
            <summary>
            企业应用的id
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_AgentData.report_location_flag">
            <summary>
            企业应用是否打开地理位置上报 0：不上报；1：进入会话上报；2：持续上报
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_AgentData.logo_mediaid">
            <summary>
            企业应用头像的mediaid，通过多媒体接口上传图片获得mediaid，上传后会自动裁剪成方形和圆形两个头像
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_AgentData.name">
            <summary>
            企业应用名称
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_AgentData.description">
            <summary>
            企业应用详情
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_AgentData.redirect_domain">
            <summary>
            企业应用可信域名
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_AgentData.isreportuser">
            <summary>
            是否接收用户变更通知。0：不接收；1：接收
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.GetSuiteTokenResult">
            <summary>
            获取应用套件令牌返回结果
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.GetSuiteTokenResult.suite_access_token">
            <summary>
            应用套件access_token
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.GetSuiteTokenResult.expires_in">
            <summary>
            有效期
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.GetPreAuthCodeResult">
            <summary>
            获取预授权码返回结果
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.GetPreAuthCodeResult.pre_auth_code">
            <summary>
            预授权码,最长为512字节
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.GetPreAuthCodeResult.expires_in">
            <summary>
            有效期
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.GetPermanentCodeResult.access_token">
            <summary>
            授权方（企业）access_token
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.GetPermanentCodeResult.expires_in">
            <summary>
            授权方（企业）access_token超时时间
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.GetPermanentCodeResult.permanent_code">
            <summary>
            企业号永久授权码
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.GetPermanentCodeResult.auth_corp_info">
            <summary>
            授权方企业信息
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.GetPermanentCodeResult.auth_info">
            <summary>
            授权信息
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_AuthCorpInfo">
            <summary>
            ThirdParty_AuthCorpInfo【QY移植修改】
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_AuthCorpInfo.corpid">
            <summary>
            授权方企业号id
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_AuthCorpInfo.corp_name">
            <summary>
            授权方企业号名称
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_AuthCorpInfo.corp_type">
            <summary>
            授权方企业号类型，认证号：verified, 注册号：unverified，体验号：test
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_AuthCorpInfo.corp_square_logo_url">
            <summary>
            授权方企业号方形头像
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_AuthCorpInfo.corp_user_max">
            <summary>
            授权方企业号用户规模
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_AuthCorpInfo.corp_agent_max">
            <summary>
            授权方企业号应用规模
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_AuthCorpInfo.corp_full_name">
            <summary>
            所绑定的企业微信主体名称
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_AuthCorpInfo.verified_end_time">
            <summary>
            verified_end_time（UNIX时间）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_AuthCorpInfo.subject_type">
            <summary>
            企业类型，1. 企业; 2. 政府以及事业单位; 3. 其他组织, 4.团队号
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_AuthCorpInfo.corp_wxqrcode">
            <summary>
            授权方企业微信二维码
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_AuthInfo.agent">
            <summary>
            授权的应用信息
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_AuthInfo.auth_user_info">
            <summary>
            	授权信息
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_Agent.agentid">
            <summary>
            授权方应用id
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_Agent.name">
            <summary>
            授权方应用名字
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_Agent.square_logo_url">
            <summary>
            授权方应用方形头像
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_Agent.round_logo_url">
            <summary>
            授权方应用圆形头像
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_Agent.appid">
            <summary>
            服务商套件中的对应应用id
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_Agent.privilege">
            <summary>
            应用对应的权限
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_Agent_Privilege">
            <summary>
            ThirdParty_Agent_Privilege【QY移植新增】
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_Agent_Privilege.level">
            <summary>
            权限等级。
            1:通讯录基本信息只读
            2:通讯录全部信息只读
            3:通讯录全部信息读写
            4:单个基本信息只读
            5:通讯录全部信息只写
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_Agent_Privilege.allow_party">
            <summary>
            应用可见范围（部门）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_Agent_Privilege.allow_user">
            <summary>
            应用可见范围（成员）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_Agent_Privilege.allow_tag">
            <summary>
            应用可见范围（标签）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_Agent_Privilege.extra_party">
            <summary>
            额外通讯录（部门）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_Agent_Privilege.extra_user">
            <summary>
            额外通讯录（成员）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_Agent_Privilege.extra_tag">
            <summary>
            额外通讯录（标签）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_AuthUserInfo.email">
            <summary>
            授权管理员的邮箱，可能为空（外部管理员一定有，不可更改）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_AuthUserInfo.mobile">
            <summary>
            授权管理员的手机号，可能为空（内部管理员一定有，可更改）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.ThirdParty_AuthUserInfo.userid">
            <summary>
            授权管理员的userid，可能为空（内部管理员一定有，不可更改）
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.GetAuthInfoResult">
            <summary>
            获取企业号的授权信息返回结果
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.GetAuthInfoResult.auth_corp_info">
            <summary>
            授权方企业信息
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.GetAuthInfoResult.auth_info">
            <summary>
            授权信息
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.GetAgentResult.agentid">
            <summary>
            授权方企业应用id
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.GetAgentResult.name">
            <summary>
            授权方企业应用名称
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.GetAgentResult.square_logo_url">
            <summary>
            授权方企业应用方形头像
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.GetAgentResult.round_logo_url">
            <summary>
            授权方企业应用圆形头像
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.GetAgentResult.description">
            <summary>
            授权方企业应用详情
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.GetAgentResult.allow_userinfos">
            <summary>
            授权方企业应用可见范围（人员），其中包括userid和关注状态state
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.GetAgentResult.allow_partys">
            <summary>
            授权方企业应用可见范围（部门）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.GetAgentResult.allow_tags">
            <summary>
            授权方企业应用可见范围（标签）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.GetAgentResult.close">
            <summary>
            授权方企业应用是否被禁用
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.GetAgentResult.redirect_domain">
            <summary>
            授权方企业应用可信域名
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.GetAgentResult.report_location_flag">
            <summary>
            授权方企业应用是否打开地理位置上报 0：不上报；1：进入会话上报；2：持续上报
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.GetAgentResult.isreportuser">
            <summary>
            是否接收用户变更通知。0：不接收；1：接收
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.GetCorpTokenResult">
            <summary>
            获取企业号access_token返回结果
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.GetCorpTokenResult.access_token">
            <summary>
            授权方（企业）access_token,最长为512字节
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.AdvancedAPIs.ThirdPartyAuth.GetCorpTokenResult.expires_in">
            <summary>
            授权方（企业）access_token超时时间
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.AdvancedAPIs.TenPay">
            <summary>
            企业号微信支付接口
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.TenPay.Transfers(System.String,System.Int32)">
            <summary>
            用于企业向微信用户个人付款 
            目前支持向指定微信用户的openid付款
            </summary>
            <param name="data">微信支付需要post的xml数据</param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.AdvancedAPIs.TenPay.GetTransferInfo(System.String,System.Int32)">
            <summary>
            用于商户的企业付款操作进行结果查询，返回付款操作详细结果。
            </summary>
            <param name="data"></param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="T:Senparc.Weixin.Work.ApiHandlerWapper">
            <summary>
            针对AccessToken无效或过期的自动处理类
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.ApiHandlerWapper.TryCommonApi``1(System.Func{System.String,``0},System.String,System.Boolean)">
            <summary>
            使用AccessToken进行操作时，如果遇到AccessToken错误的情况，重新获取AccessToken一次，并重试。
            使用此方法之前必须使用AccessTokenContainer.Register(_appId, _appSecret);或JsApiTicketContainer.Register(_appId, _appSecret);方法对账号信息进行过注册，否则会出错。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fun"></param>
            <param name="accessTokenOrAppKey">AccessToken或AppKey。如果为null，则自动取已经注册的第一个corpId/corpSecret来信息获取AccessToken。</param>
            <param name="retryIfFaild">请保留默认值true，不用输入。</param>
            <returns></returns>
        </member>
        <member name="T:Senparc.Weixin.Work.CommonAPIs.CommonApi">
            <summary>
            通用基础API
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.CommonAPIs.CommonApi.GetToken(System.String,System.String)">
            <summary>
            获取AccessToken
            </summary>
            <param name="corpId"></param>
            <param name="corpSecret"></param>
        </member>
        <member name="M:Senparc.Weixin.Work.CommonAPIs.CommonApi.GetCallBackIp(System.String)">
            <summary>
            获取微信服务器的ip段
            </summary>
            <param name="accessToken"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.CommonAPIs.CommonApi.GetTicket(System.String,System.String)">
            <summary>
            获取调用微信JS接口的临时票据
            </summary>
            <param name="corpId"></param>
            <param name="corpSecret"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.CommonAPIs.CommonApi.ConvertToOpenId(System.String,System.String,System.String,System.Int32)">
            <summary>
            userid转换成openid接口
            </summary>
            <param name="accessToken"></param>
            <param name="userId">企业号内的成员id</param>
            <param name="agentId">需要发送红包的应用ID，若只是使用微信支付和企业转账，则无需该参数</param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.CommonAPIs.CommonApi.ConvertToUserId(System.String,System.String,System.Int32)">
            <summary>
            openid转换成userid接口
            </summary>
            <param name="accessToken"></param>
            <param name="openId"></param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.CommonAPIs.CommonApi.CreateMenu(System.String,System.Int32,Senparc.Weixin.Work.Entities.Menu.ButtonGroup,System.Int32)">
            <summary>
            创建菜单
            </summary>
            <param name="accessToken"></param>
            <param name="agentId"></param>
            <param name="buttonData">菜单内容</param>
            <param name="timeOut">代理请求超时时间（毫秒）</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.CommonAPIs.CommonApi.GetSingleButtonFromJsonObject(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            获取单击按钮
            </summary>
            <param name="objs"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.CommonAPIs.CommonApi.GetMenuFromJson(System.String)">
            <summary>
            从JSON字符串获取菜单对象
            </summary>
            <param name="jsonString"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.CommonAPIs.CommonApi.GetMenu(System.String,System.Int32)">
            <summary>
            获取当前菜单，如果菜单不存在，将返回null
            </summary>
            <param name="accessToken">调用接口凭证</param>
            <param name="agentId">企业应用的id，整型。可在应用的设置页面查看</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.CommonAPIs.CommonApi.GetMenuFromJsonResult(Senparc.Weixin.Work.GetMenuResultFull)">
            <summary>
            根据微信返回的Json数据得到可用的GetMenuResult结果
            </summary>
            <param name="resultFull"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.CommonAPIs.CommonApi.DeleteMenu(System.String,System.Int32)">
            <summary>
            删除菜单
            </summary>
            <param name="accessToken">调用接口凭证</param>
            <param name="agentId">企业应用的id，整型。可在应用的设置页面查看</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.CommonAPIs.CommonJsonSend.Send(System.String,System.String,System.Object,Senparc.Weixin.CommonJsonSendType,System.Int32,System.Boolean,Senparc.Weixin.Helpers.JsonSetting)">
            <summary>
            向需要AccessToken的API发送消息的公共方法
            </summary>
            <param name="accessToken">这里的AccessToken是通用接口的AccessToken，非OAuth的。如果不需要，可以为null，此时urlFormat不要提供{0}参数</param>
            <param name="urlFormat"></param>
            <param name="data">如果是Get方式，可以为null</param>
            <param name="timeOut"></param>
            <param name="checkValidationResult"></param>
            <param name="jsonSetting"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.CommonAPIs.CommonJsonSend.Send``1(System.String,System.String,System.Object,Senparc.Weixin.CommonJsonSendType,System.Int32,System.Boolean,Senparc.Weixin.Helpers.JsonSetting)">
            <summary>
            向需要AccessToken的API发送消息的公共方法
            </summary>
            <param name="accessToken">这里的AccessToken是通用接口的AccessToken，非OAuth的。如果不需要，可以为null，此时urlFormat不要提供{0}参数</param>
            <param name="urlFormat"></param>
            <param name="data">如果是Get方式，可以为null</param>
            <param name="timeOut"></param>
            <param name="checkValidationResult"></param>
            <param name="jsonSetting"></param>
            <returns></returns>
        </member>
        <member name="P:Senparc.Weixin.Work.Containers.AccessTokenBag.CorpId">
            <summary>
            CorpId
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Containers.AccessTokenBag.CorpSecret">
            <summary>
            CorpSecret
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Containers.AccessTokenBag.ExpireTime">
            <summary>
            过期时间
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Containers.AccessTokenBag.AccessTokenResult">
            <summary>
            AccessTokenResult
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Containers.AccessTokenBag.Lock">
            <summary>
            只针对这个CorpId的锁
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Containers.AccessTokenContainer">
            <summary>
            通用接口AccessToken容器，用于自动管理AccessToken，如果过期会重新获取
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.Containers.AccessTokenContainer.BuildingKey(System.String,System.String)">
            <summary>
            注册应用凭证信息，此操作只是注册，不会马上获取Token，并将清空之前的Token。
            执行此注册过程，会连带注册ProviderTokenContainer。
            </summary>
            <param name="corpId">corpId</param>
            <param name="corpSecret">corpSecret</param>
            此接口无异步方法
        </member>
        <member name="M:Senparc.Weixin.Work.Containers.AccessTokenContainer.GetCoprIdAndSecretFromKey(System.String,System.String@,System.String@)">
            <summary>
            根据Key获取corpId和corpSecret
            </summary>
            <param name="appKey">由BuildingKey()方法生成的Key</param>
            <param name="corpId">corpId</param>
            <param name="corpSecret">corpSecret</param>
        </member>
        <member name="M:Senparc.Weixin.Work.Containers.AccessTokenContainer.Register(System.String,System.String,System.String)">
            <summary>
            注册每个corpId和corpSecret，在调用高级接口时可以仅使用AppKey（由 AccessTokenContainer.BuildingKey() 方法获得）
            </summary>
            <param name="corpId"></param>
            <param name="corpSecret"></param>
            <param name="name"></param>
        </member>
        <member name="M:Senparc.Weixin.Work.Containers.AccessTokenContainer.TryGetToken(System.String,System.String,System.Boolean)">
            <summary>
            使用完整的应用凭证获取Token，如果不存在将自动注册
            </summary>
            <param name="corpId"></param>
            <param name="corpSecret"></param>
            <param name="getNewToken"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.Containers.AccessTokenContainer.GetToken(System.String,System.Boolean)">
            <summary>
            获取可用Token
            </summary>
            <param name="appKey">由BuildingKey()方法生成的Key</param>
            <param name="getNewToken">是否强制重新获取新的Token</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.Containers.AccessTokenContainer.GetToken(System.String,System.String,System.Boolean)">
            <summary>
            获取可用Token
            </summary>
            <param name="corpId"></param>
            <param name="corpSecret"></param>
            <param name="getNewToken">是否强制重新获取新的Token</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.Containers.AccessTokenContainer.GetTokenResult(System.String,System.String,System.Boolean)">
            <summary>
            获取可用Token
            </summary>
            <param name="corpId"></param>
            <param name="corpSecret"></param>
            <param name="getNewToken">是否强制重新获取新的Token</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.Containers.AccessTokenContainer.GetTokenResult(System.String,System.Boolean)">
            <summary>
            获取可用Token
            </summary>
            <param name="appKey">由BuildingKey()方法生成的Key</param>
            <param name="getNewToken">是否强制重新获取新的Token</param>
            <returns></returns>
        </member>
        <member name="T:Senparc.Weixin.Work.Containers.JsApiTicketBag">
            <summary>
            JsApiTicketBag
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Containers.JsApiTicketBag.Lock">
            <summary>
            只针对这个AppId的锁
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Containers.JsApiTicketContainer">
            <summary>
            通用接口JsApiTicket容器，用于自动管理JsApiTicket，如果过期会重新获取
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.Containers.JsApiTicketContainer.BuildingKey(System.String,System.String)">
            <summary>
            注册应用凭证信息，此操作只是注册，不会马上获取Ticket，并将清空之前的Ticket，
            </summary>
            <param name="appId"></param>
            <param name="appSecret"></param>
            <param name="name">标记JsApiTicket名称（如微信公众号名称），帮助管理员识别</param>
            此接口无异步方法
        </member>
        <member name="M:Senparc.Weixin.Work.Containers.JsApiTicketContainer.TryGetTicket(System.String,System.String,System.Boolean)">
            <summary>
            使用完整的应用凭证获取Ticket，如果不存在将自动注册
            </summary>
            <param name="appId"></param>
            <param name="appSecret"></param>
            <param name="getNewTicket"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.Containers.JsApiTicketContainer.GetTicket(System.String,System.String,System.Boolean)">
            <summary>
            获取可用Ticket
            </summary>
            <param name="appId"></param>
            <param name="getNewTicket">是否强制重新获取新的Ticket</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.Containers.JsApiTicketContainer.GetTicketResult(System.String,System.String,System.Boolean)">
            <summary>
            获取可用Ticket
            </summary>
            <param name="appId"></param>
            <param name="getNewTicket">是否强制重新获取新的Ticket</param>
            <returns></returns>
        </member>
        <member name="T:Senparc.Weixin.Work.Containers.ProviderTokenBag">
            <summary>
            ProviderTokenBag
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Containers.ProviderTokenBag.CorpId">
            <summary>
            CorpId
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Containers.ProviderTokenBag.CorpSecret">
            <summary>
            CorpSecret
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Containers.ProviderTokenBag.ExpireTime">
            <summary>
            过期时间
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Containers.ProviderTokenBag.ProviderTokenResult">
            <summary>
            ProviderTokenResult
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Containers.ProviderTokenBag.Lock">
            <summary>
            只针对这个CorpId的锁
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Containers.ProviderTokenContainer">
            <summary>
            通用接口ProviderToken容器，用于自动管理ProviderToken，如果过期会重新获取
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.Containers.ProviderTokenContainer.BuildingKey(System.String,System.String)">
            <summary>
            获取全局唯一Key
            </summary>
            <param name="corpId"></param>
            <param name="corpSecret"></param>
        </member>
        <member name="M:Senparc.Weixin.Work.Containers.ProviderTokenContainer.Register(System.String,System.String,System.String)">
            <summary>
            注册应用凭证信息，此操作只是注册，不会马上获取Token，并将清空之前的Token，
            </summary>
            <param name="corpId"></param>
            <param name="corpSecret"></param>
            <param name="name">标记AccessToken名称（如微信公众号名称），帮助管理员识别</param>
        </member>
        <member name="M:Senparc.Weixin.Work.Containers.ProviderTokenContainer.TryGetToken(System.String,System.String,System.Boolean)">
            <summary>
            使用完整的应用凭证获取Token，如果不存在将自动注册
            </summary>
            <param name="corpId"></param>
            <param name="corpSecret"></param>
            <param name="getNewToken"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.Containers.ProviderTokenContainer.GetToken(System.String,System.String,System.Boolean)">
            <summary>
            获取可用Token
            </summary>
            <param name="corpId"></param>
            <param name="getNewToken">是否强制重新获取新的Token</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.Containers.ProviderTokenContainer.GetTokenResult(System.String,System.String,System.Boolean)">
            <summary>
            获取可用Token
            </summary>
            <param name="corpId"></param>
            <param name="getNewToken">是否强制重新获取新的Token</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.Entities.Extensions.ConvertToRequestMessageText(Senparc.Weixin.Work.Entities.IRequestMessageEventBase)">
            <summary>
            将RequestMessageEventBase转换成RequestMessageText类型，其中Content = requestMessage.EventKey
            </summary>
            <param name="requestMessageEvent"></param>
            <returns></returns>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.AccessTokenResult">
            <summary>
            GetToken请求后的JSON返回格式
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.AccessTokenResult.access_token">
            <summary>
            获取到的凭证。长度为64至512个字节
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.AccessTokenResult.expires_in">
            <summary>
            凭证的有效时间（秒）
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.ConvertToOpenIdResult">
            <summary>
            userid转换成openid接口返回的Json结果
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.ConvertToOpenIdResult.openid">
            <summary>
            企业号成员userid对应的openid，若有传参agentid，则是针对该agentid的openid。否则是针对企业号corpid的openid
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.ConvertToOpenIdResult.appid">
            <summary>
            应用的appid，若请求包中不包含agentid则不返回appid。该appid在使用微信红包时会用到
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.ConvertToUserIdResult">
            <summary>
            openid转换成userid接口返回的Json结果
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.ConvertToUserIdResult.userid">
            <summary>
            该openid在企业号中对应的成员userid
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.GetMenuResult">
            <summary>
            GetMenu返回的Json结果
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.JsApiTicketResult">
            <summary>
            jsapi_ticket请求后的JSON返回格式
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.JsApiTicketResult.ticket">
            <summary>
            获取到的凭证
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.JsApiTicketResult.expires_in">
            <summary>
            凭证有效时间，单位：秒
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.ProviderTokenResult">
            <summary>
            获取应用提供商凭证返回格式
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.ProviderTokenResult.provider_access_token">
            <summary>
            服务提供商的accesstoken，可用于用户授权登录信息查询接口
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.ProviderTokenResult.expires_in">
            <summary>
            凭证有效时间，单位：秒
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.Menu.BaseButton">
            <summary>
            所有按钮基类
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.Menu.BaseButton.name">
            <summary>
            按钮描述，既按钮名字，不超过16个字节，子菜单不超过40个字节
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.Menu.ButtonGroup">
            <summary>
            整个按钮设置（可以直接用ButtonGroup实例返回JSON对象）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.Menu.ButtonGroup.button">
            <summary>
            按钮数组，按钮个数应为2~3个
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.Menu.SingleButton">
            <summary>
            所有单击按钮的基类（view，click等）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.Menu.SingleButton.type">
            <summary>
            按钮类型（click或view）
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.Menu.SingleClickButton">
            <summary>
            单个按键
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.Menu.SingleClickButton.key">
            <summary>
            类型为click时必须。
            按钮KEY值，用于消息接口(event类型)推送，不超过128字节
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.Menu.SingleLocationSelectButton">
            <summary>
            单个按键
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.Menu.SingleLocationSelectButton.key">
            <summary>
            类型为location_select时必须。
            用户点击按钮后，微信客户端将调起地理位置选择工具，完成选择操作后，将选择的地理位置发送给开发者的服务器，同时收起位置选择工具，随后可能会收到开发者下发的消息。
            仅支持微信iPhone5.4.1以上版本，和Android5.4以上版本的微信用户，旧版本微信用户点击后将没有回应，开发者也不能正常接收到事件推送。
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.Menu.SinglePicPhotoOrAlbumButton">
            <summary>
            单个按键
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.Menu.SinglePicPhotoOrAlbumButton.key">
            <summary>
            类型为pic_photo_or_album时必须。
            用户点击按钮后，微信客户端将弹出选择器供用户选择“拍照”或者“从手机相册选择”。用户选择后即走其他两种流程。
            仅支持微信iPhone5.4.1以上版本，和Android5.4以上版本的微信用户，旧版本微信用户点击后将没有回应，开发者也不能正常接收到事件推送。
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.Menu.SinglePicSysphotoButton">
            <summary>
            单个按键
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.Menu.SinglePicSysphotoButton.key">
            <summary>
            类型为pic_sysphoto时必须。
            用户点击按钮后，微信客户端将调起系统相机，完成拍照操作后，会将拍摄的相片发送给开发者，并推送事件给开发者，同时收起系统相机，随后可能会收到开发者下发的消息。
            仅支持微信iPhone5.4.1以上版本，和Android5.4以上版本的微信用户，旧版本微信用户点击后将没有回应，开发者也不能正常接收到事件推送。
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.Menu.SinglePicWeixinButton">
            <summary>
            单个按键
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.Menu.SinglePicWeixinButton.key">
            <summary>
            类型为pic_weixin时必须。
            用户点击按钮后，微信客户端将调起微信相册，完成选择操作后，将选择的相片发送给开发者的服务器，并推送事件给开发者，同时收起相册，随后可能会收到开发者下发的消息。
            仅支持微信iPhone5.4.1以上版本，和Android5.4以上版本的微信用户，旧版本微信用户点击后将没有回应，开发者也不能正常接收到事件推送。
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.Menu.SingleScancodePushButton">
            <summary>
            单个按键
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.Menu.SingleScancodePushButton.key">
            <summary>
            类型为scancode_push时必须。
            用户点击按钮后，微信客户端将调起扫一扫工具，完成扫码操作后显示扫描结果（如果是URL，将进入URL），且会将扫码的结果传给开发者，开发者可以下发消息。
            仅支持微信iPhone5.4.1以上版本，和Android5.4以上版本的微信用户，旧版本微信用户点击后将没有回应，开发者也不能正常接收到事件推送。
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.Menu.SingleScancodeWaitmsgButton">
            <summary>
            单个按键
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.Menu.SingleScancodeWaitmsgButton.key">
            <summary>
            类型为scancode_waitmsg时必须。
            用户点击按钮后，微信客户端将调起扫一扫工具，完成扫码操作后，将扫码的结果传给开发者，同时收起扫一扫工具，然后弹出“消息接收中”提示框，随后可能会收到开发者下发的消息。
            仅支持微信iPhone5.4.1以上版本，和Android5.4以上版本的微信用户，旧版本微信用户点击后将没有回应，开发者也不能正常接收到事件推送。
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.Menu.SingleViewButton">
            <summary>
            Url按键
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.Menu.SingleViewButton.url">
            <summary>
            类型为view时必须
            网页链接，用户点击按钮可打开链接，不超过256字节
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.Menu.SubButton">
            <summary>
            子菜单
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.Menu.SubButton.sub_button">
            <summary>
            子按钮数组，按钮个数应为2~5个
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.BatchJobInfo">
            <summary>
            异步任务完成事件推送的BatchJob
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.BatchJobInfo.JobId">
            <summary>
            异步任务id，最大长度为64字符
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.BatchJobInfo.JobType">
            <summary>
            操作类型，字符串，目前分别有：
            1. sync_user(增量更新成员)
            2. replace_user(全量覆盖成员)
            3. invite_user(邀请成员关注)
            4. replace_party(全量覆盖部门)
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.BatchJobInfo.ErrCode">
            <summary>
            返回码
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.BatchJobInfo.ErrMsg">
            <summary>
            对返回码的文本描述内容
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.ChatInfo">
            <summary>
            会话信息
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.ChatInfo.ChatId">
            <summary>
            会话id
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.ChatInfo.Name">
            <summary>
            会话标题
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.ChatInfo.Owner">
            <summary>
            管理员userid
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.ChatInfo.UserList">
            <summary>
            会话成员列表，成员用userid标识，成员间以竖线“|”分隔
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.IRequestMessageEventKey">
            <summary>
            具有EventKey属性的RequestMessage接口
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.Receiver">
            <summary>
            接收人
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.Receiver.Type">
            <summary>
            接收人类型：single|group，分别表示：群聊|单聊
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.Receiver.Id">
            <summary>
            接收人的值，为userid|chatid，分别表示：成员id|会话id
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.IRequestMessageEventBase.Event">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEventBase.Event">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.RequestMessageEvent_Batch_Job_Result">
            <summary>
            异步任务完成事件推送(batch_job_result)
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_Batch_Job_Result.Event">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_Batch_Job_Result.BatchJob">
            <summary>
            异步任务完成事件推送BatchJob
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.RequestMessageEvent_Click">
            <summary>
            事件之点击推事件(Click)
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_Click.Event">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_Click.EventKey">
            <summary>
            事件KEY值，与自定义菜单接口中KEY值对应
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.RequestMessageEvent_Enter_Agent">
            <summary>
            用户进入应用的事件推送(enter_agent)
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_Enter_Agent.Event">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_Enter_Agent.EventKey">
            <summary>
            事件KEY值，此事件该值为空
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.RequestMessageEvent_Location">
            <summary>
            上报地理位置事件
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_Location.Latitude">
            <summary>
            地理位置纬度
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_Location.Longitude">
            <summary>
            地理位置经度
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_Location.Precision">
            <summary>
            地理位置精度
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.RequestMessageEvent_Location_Select">
            <summary>
            事件之弹出地理位置选择器（location_select）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_Location_Select.Event">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_Location_Select.EventKey">
            <summary>
            事件KEY值，与自定义菜单接口中KEY值对应
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_Location_Select.SendLocationInfo">
            <summary>
            发送的位置信息
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.RequestMessageEvent_Pic_Photo_Or_Album">
            <summary>
            事件之弹出拍照或者相册发图（pic_photo_or_album）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_Pic_Photo_Or_Album.Event">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_Pic_Photo_Or_Album.EventKey">
            <summary>
            事件KEY值，与自定义菜单接口中KEY值对应
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_Pic_Photo_Or_Album.SendPicsInfo">
            <summary>
            发送的图片信息
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.RequestMessageEvent_Pic_Sysphoto">
            <summary>
            事件之弹出系统拍照发图(pic_sysphoto)
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_Pic_Sysphoto.Event">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_Pic_Sysphoto.EventKey">
            <summary>
            事件KEY值，与自定义菜单接口中KEY值对应
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_Pic_Sysphoto.SendPicsInfo">
            <summary>
            发送的图片信息
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.RequestMessageEvent_Pic_Weixin">
            <summary>
            事件之弹出微信相册发图器(pic_weixin)
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_Pic_Weixin.Event">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_Pic_Weixin.EventKey">
            <summary>
            事件KEY值，与自定义菜单接口中KEY值对应
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_Pic_Weixin.SendPicsInfo">
            <summary>
            发送的图片信息
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.RequestMessageEvent_Scancode_Push">
            <summary>
            事件之扫码推事件(scancode_push)
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_Scancode_Push.Event">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_Scancode_Push.EventKey">
            <summary>
            事件KEY值，与自定义菜单接口中KEY值对应
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_Scancode_Push.ScanCodeInfo">
            <summary>
            扫描信息
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.RequestMessageEvent_Scancode_Waitmsg">
            <summary>
            事件之扫码推事件且弹出“消息接收中”提示框(scancode_waitmsg)
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_Scancode_Waitmsg.Event">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_Scancode_Waitmsg.EventKey">
            <summary>
            事件KEY值，与自定义菜单接口中KEY值对应
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_Scancode_Waitmsg.ScanCodeInfo">
            <summary>
            扫描信息
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.RequestMessageEvent_Subscribe">
            <summary>
            事件之关注事件的推送（subscribe）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_Subscribe.Event">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.RequestMessageEvent_UnSubscribe">
            <summary>
            事件之取消关注事件的推送（unsubscribe）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_UnSubscribe.Event">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.RequestMessageEvent_View">
            <summary>
            事件之URL跳转视图（View）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_View.Event">
            <summary>
            事件类型
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageEvent_View.EventKey">
            <summary>
            事件KEY值，设置的跳转URL
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.ScanCodeInfo">
            <summary>
            扫码事件中的ScanCodeInfo
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.SendLocationInfo">
            <summary>
            弹出地理位置选择器的事件推送中的SendLocationInfo
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.SendLocationInfo.Location_X">
            <summary>
            X坐标信息
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.SendLocationInfo.Location_Y">
            <summary>
            Y坐标信息
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.SendLocationInfo.Scale">
            <summary>
            精度，可理解为精度或者比例尺、越精细的话 scale越高
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.SendLocationInfo.Label">
            <summary>
            地理位置的字符串信息
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.SendLocationInfo.Poiname">
            <summary>
            朋友圈POI的名字，可能为空
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.SendPicsInfo">
            <summary>
            系统拍照发图中的SendPicsInfo
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.SendPicsInfo.Count">
            <summary>
            发送的图片数量
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.SendPicsInfo.PicList">
            <summary>
            图片列表
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.Md5Sum.PicMd5Sum">
            <summary>
            图片的MD5值，开发者若需要，可用于验证接收到图片
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Entities.Request.KF.AgentType.kf_internal">
            <summary>
            内部客服
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Entities.Request.KF.AgentType.kf_external">
            <summary>
            外部客服
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.PostModel">
            <summary>
            微信企业号服务器Post过来的参数集合（不包括PostData）
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.RequestMessageBase">
            <summary>
            接收到请求的消息
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageBase.AgentID">
            <summary>
            企业应用的id，整型。可在应用的设置页面查看
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.RequestMessageFile">
            <summary>
            文件消息请求
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageLocation.Location_X">
            <summary>
            地理位置纬度
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageLocation.Location_Y">
            <summary>
            地理位置经度
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageVoice.MediaId">
            <summary>
            语音消息媒体id，可以调用多媒体文件下载接口拉取数据。
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageVoice.Format">
            <summary>
            语音格式：amr
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.ThirdPartyInfoBase.SuiteId">
            <summary>
            应用套件的SuiteId
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.ThirdPartyInfoBase.TimeStamp">
            <summary>
            时间戳
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.RequestMessageInfo_Cancel_Auth">
            <summary>
            取消授权的通知
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageInfo_Cancel_Auth.AuthCorpId">
            <summary>
            授权方企业号的corpid内容
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.RequestMessageInfo_Change_Auth">
            <summary>
            变更授权的通知
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageInfo_Change_Auth.AuthCorpId">
            <summary>
            授权方企业号的corpid
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.RequestMessageInfo_Contact_Sync">
            <summary>
            变更授权的通知
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageInfo_Contact_Sync.AuthCorpId">
            <summary>
            授权方企业号的corpid
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageInfo_Contact_Sync.Seq">
            <summary>
            当前序号
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.RequestMessageInfo_Create_Auth">
            <summary>
            变更授权的通知
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageInfo_Create_Auth.AuthCode">
            <summary>
            授权的auth_code,用于获取企业的永久授权码
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.RequestMessageInfo_Suite_Ticket">
            <summary>
            推送suite_ticket协议
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.RequestMessageInfo_Suite_Ticket.SuiteTicket">
            <summary>
            Ticket内容
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.Article.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.Article.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.Article.Url">
            <summary>
            点击后跳转的链接
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.Article.PicUrl">
            <summary>
            图文消息的图片链接，支持JPG、PNG格式，较好的效果为大图640*320，小图80*80。如不填，在客户端不显示图片
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.Response.EncryptResponseMessage">
            <summary>
            返回给服务器的加密消息
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.MpNewsArticle.title">
            <summary>
            图文消息的标题
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.MpNewsArticle.thumb_media_id">
            <summary>
            图文消息缩略图的media_id, 可以在上传多媒体文件接口中获得。此处thumb_media_id即上传接口返回的media_id
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.MpNewsArticle.author">
            <summary>
            图文消息的作者
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.MpNewsArticle.content_source_url">
            <summary>
            图文消息点击“阅读原文”之后的页面链接
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.MpNewsArticle.content">
            <summary>
            图文消息的内容，支持html标签
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.MpNewsArticle.digest">
            <summary>
            图文消息的描述
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.MpNewsArticle.show_cover_pic">
            <summary>
            是否显示封面，1为显示，0为不显示
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.ResponseMessageBase">
            <summary>
            响应回复消息
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.Entities.ResponseMessageBase.CreateFromRequestMessage(Senparc.Weixin.Work.Entities.IRequestMessageBase,Senparc.Weixin.Work.ResponseMsgType)">
            <summary>
            获取响应类型实例，并初始化
            </summary>
            <param name="requestMessage">请求</param>
            <param name="msgType">响应类型</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.Entities.ResponseMessageBase.CreateFromRequestMessage``1(Senparc.Weixin.Work.Entities.IRequestMessageBase)">
            <summary>
            获取响应类型实例，并初始化
            </summary>
            <typeparam name="T">需要返回的类型</typeparam>
            <param name="requestMessage">请求数据</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.Entities.ResponseMessageBase.CreateFromResponseXml(System.String)">
            <summary>
            从返回结果XML转换成IResponseMessageBase实体类
            </summary>
            <param name="xml">返回给服务器的Response Xml</param>
            <returns></returns>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.ResponseMessageMpNews.MpNewsArticles">
            <summary>
            文章列表，微信客户端只能输出前10条（可能未来数字会有变化，出于视觉效果考虑，建议控制在8条以内）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Entities.ResponseMessageNews.Articles">
            <summary>
            文章列表，微信客户端只能输出前10条（可能未来数字会有变化，出于视觉效果考虑，建议控制在8条以内）
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.ResponseMessageNoResponse">
            <summary>
            当MessageHandler接收到IResponseNothing的返回类型参数时，只会向微信服务器返回空字符串，等同于return null
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.ResponseMessageVideo">
            <summary>
            需要预先上传多媒体文件到微信服务器，只支持认证服务号。
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.ResponseMessageVoice">
            <summary>
            需要预先上传多媒体文件到微信服务器，只支持认证服务号。
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Entities.SuccessResponseMessage">
            <summary>
            只返回"success"成功字符串的响应信息
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.GetMenuResultFull">
            <summary>
            获取菜单时候的完整结构，用于接收微信服务器返回的Json信息
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.Helpers.MsgTypeHelper.GetRequestMsgType(System.Xml.Linq.XDocument)">
            <summary>
            根据xml信息，返回RequestMsgType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.Helpers.MsgTypeHelper.GetRequestMsgType(System.String)">
            <summary>
            根据xml信息，返回RequestMsgType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.Helpers.MsgTypeHelper.GetThirdPartyInfo(System.Xml.Linq.XDocument)">
            <summary>
            根据xml信息，返回ThirdPartyInfo
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.Helpers.MsgTypeHelper.GetThirdPartyInfo(System.String)">
            <summary>
            根据xml信息，返回RequestInfoType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.Helpers.MsgTypeHelper.GetResponseMsgType(System.Xml.Linq.XDocument)">
            <summary>
            根据xml信息，返回ResponseMsgType
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.Helpers.MsgTypeHelper.GetResponseMsgType(System.String)">
            <summary>
            根据xml信息，返回ResponseMsgType
            </summary>
            <returns></returns>
        </member>
        <member name="T:Senparc.Weixin.Work.Helpers.EntityHelper">
            <summary>
            EntityHelper
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.Helpers.EntityHelper.FillEntityWithXml``1(``0,System.Xml.Linq.XDocument)">
            <summary>
            根据XML信息填充实实体
            </summary>
            <typeparam name="T">MessageBase为基类的类型，Response和Request都可以</typeparam>
            <param name="entity">实体</param>
            <param name="doc">XML</param>
        </member>
        <member name="M:Senparc.Weixin.Work.Helpers.EntityHelper.ConvertEntityToXml``1(``0)">
            <summary>
            将实体转为XML
            </summary>
            <typeparam name="T">RequestMessage或ResponseMessage</typeparam>
            <param name="entity">实体</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.Helpers.EntityHelper.ConvertEntityToXmlString``1(``0)">
            <summary>
            将实体转为XML字符串
            </summary>
            <typeparam name="T">RequestMessage或ResponseMessage</typeparam>
            <param name="entity">实体</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.Helpers.EntityHelper.CreateResponseMessage``1(Senparc.Weixin.Work.Entities.IRequestMessageBase)">
            <summary>
            ResponseMessageBase.CreateFromRequestMessage&lt;T&gt;(requestMessage)的扩展方法
            </summary>
            <typeparam name="T">需要生成的ResponseMessage类型</typeparam>
            <param name="requestMessage">IRequestMessageBase接口下的接收信息类型</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.Helpers.EntityHelper.CreateResponseMessage(System.String)">
            <summary>
            ResponseMessageBase.CreateFromResponseXml(xml)的扩展方法
            </summary>
            <param name="xml">返回给服务器的Response Xml</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.Helpers.JSSDKHelper.GetNoncestr">
            <summary>
            获取随机字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.Helpers.JSSDKHelper.GetTimestamp">
            <summary>
            获取时间戳
            <remarks>
            2016-05-03：修改返回类型，方便GetSignature调用，避免再次类型转换
            </remarks>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.Helpers.JSSDKHelper.GetSignature(System.String,System.String,System.Int64,System.String)">
            <summary>
            获取JS-SDK权限验证的签名Signature
            </summary>
            <param name="jsapi_ticket">jsapi_ticket</param>
            <param name="noncestr">随机字符串(必须与wx.config中的nonceStr相同)</param>
            <param name="timestamp">时间戳(必须与wx.config中的timestamp相同)</param>
            <param name="url">当前网页的URL，不包含#及其后面部分(必须是调用JS接口页面的完整URL)</param>
            <returns></returns>
        </member>
        <member name="T:Senparc.Weixin.Work.Helpers.JsSdkUiPackage">
            <summary>
            为UI输出准备的JSSDK信息包
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Helpers.JsSdkUiPackage.AppId">
            <summary>
            微信AppId
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Helpers.JsSdkUiPackage.Timestamp">
            <summary>
            时间戳
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Helpers.JsSdkUiPackage.NonceStr">
            <summary>
            随机码
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.Helpers.JsSdkUiPackage.Signature">
            <summary>
            签名
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Helpers.MD5UtilHelper">
            <summary>
            MD5UtilHelper 的摘要说明。
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.Helpers.MD5UtilHelper.GetMD5(System.String,System.String)">
            <summary>
            获取大写的MD5签名结果
            </summary>
            <param name="encypStr"></param>
            <param name="charset"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.Helpers.SHA1UtilHelper.GetSha1(System.String)">
            <summary>
            签名算法
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Senparc.Weixin.Work.RequestMsgType">
            <summary>
            接收消息类型
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Event">
            <summary>
            当RequestMsgType类型为Event时，Event属性的类型
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Event.ENTER">
            <summary>
            进入会话（似乎已从官方API中移除）
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Event.LOCATION">
            <summary>
            地理位置
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Event.subscribe">
            <summary>
            订阅
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Event.unsubscribe">
            <summary>
            取消订阅
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Event.CLICK">
            <summary>
            自定义菜单点击事件
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Event.scan">
            <summary>
            二维码扫描
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Event.VIEW">
            <summary>
            URL跳转
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Event.MASSSENDJOBFINISH">
            <summary>
            事件推送群发结果
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Event.TEMPLATESENDJOBFINISH">
            <summary>
            模板信息发送完成
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Event.SCANCODE_PUSH">
            <summary>
            扫码推事件
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Event.SCANCODE_WAITMSG">
            <summary>
            扫码推事件且弹出“消息接收中”提示框
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Event.PIC_SYSPHOTO">
            <summary>
            弹出系统拍照发图
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Event.PIC_PHOTO_OR_ALBUM">
            <summary>
            弹出拍照或者相册发图
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Event.PIC_WEIXIN">
            <summary>
            弹出微信相册发图器
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Event.LOCATION_SELECT">
            <summary>
            弹出地理位置选择器
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Event.ENTER_AGENT">
            <summary>
            用户进入应用的事件推送
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Event.BATCH_JOB_RESULT">
            <summary>
            异步任务完成事件推送
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.ThirdPartyInfo.Unkonwn">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.ThirdPartyInfo.SUITE_TICKET">
            <summary>
            推送suite_ticket协议
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.ThirdPartyInfo.CHANGE_AUTH">
            <summary>
            变更授权的通知
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.ThirdPartyInfo.CANCEL_AUTH">
            <summary>
            取消授权的通知
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.ThirdPartyInfo.CREATE_AUTH">
            <summary>
            授权成功推送auth_code事件
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.ThirdPartyInfo.CONTACT_SYNC">
            <summary>
            通讯录变更通知
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.ResponseMsgType">
            <summary>
            发送消息类型
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.ButtonType">
            <summary>
            菜单按钮类型
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.ButtonType.click">
            <summary>
            点击
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.ButtonType.view">
            <summary>
            Url
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.ButtonType.scancode_push">
            <summary>
            扫码推事件
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.ButtonType.scancode_waitmsg">
            <summary>
            扫码推事件且弹出“消息接收中”提示框
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.ButtonType.pic_sysphoto">
            <summary>
            弹出系统拍照发图
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.ButtonType.pic_photo_or_album">
            <summary>
            弹出拍照或者相册发图
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.ButtonType.pic_weixin">
            <summary>
            弹出微信相册发图器
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.ButtonType.location_select">
            <summary>
            弹出地理位置选择器
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.UploadMediaFileType">
            <summary>
            上传媒体文件类型（所有文件size必须大于5个字节）【QY移植修改】
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.UploadMediaFileType.image">
            <summary>
            图片: 2MB，支持JPG,PNG格式
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.UploadMediaFileType.voice">
            <summary>
            语音：2MB，播放长度不超过60s，支持AMR格式
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.UploadMediaFileType.video">
            <summary>
            视频：10MB，支持MP4格式
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.UploadMediaFileType.file">
            <summary>
            普通文件：20MB
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Language">
            <summary>
            语言
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Language.zh_CN">
            <summary>
            中文简体
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Language.zh_TW">
            <summary>
            中文繁体
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Language.en">
            <summary>
            英文
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Chat_Type">
            <summary>
            群聊类型
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.ChatMsgType">
            <summary>
            群聊发送消息类型
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Mute_Status">
            <summary>
            免打扰状态
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.KF_User_Type">
            <summary>
            客服消息用户类型
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.KF_User_Type.kf">
            <summary>
            客服
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.KF_User_Type.userid">
            <summary>
            客户，企业员工userid
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.KF_User_Type.openid">
            <summary>
            客户，企业员工openid
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.KF_Type">
            <summary>
            客服类型
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.KF_Type.internal">
            <summary>
            内部客服
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.KF_Type.external">
            <summary>
            外部客服
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Login_User_Type">
            <summary>redirect_uri支持登录的类型
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Login_User_Type.member">
            <summary>成员登录
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Login_User_Type.admin">
            <summary>管理员登录
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Login_User_Type.all">
            <summary>成员或管理员皆可登录
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.Exceptions.WeixinWorkException">
            <summary>
            企业微信异常
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.MessageHandlers.IWorkMessageHandler.EncryptPostData">
            <summary>
            原始加密信息
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.GlobalWeixinContext">
            <summary>
            上下文（仅限于当前MessageHandler基类内）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.WeixinContext">
            <summary>
            全局消息上下文
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.ResponseDocument">
            <summary>
            根据ResponseMessageBase获得转换后的ResponseDocument
            注意：这里每次请求都会根据当前的ResponseMessageBase生成一次，如需重用此数据，建议使用缓存或局部变量
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.FinalResponseDocument">
            <summary>
            最后返回的ResponseDocument。
            这里是Senparc.Weixin.Work，应当在ResponseDocument基础上进行加密（每次获取重新加密，所以结果会不同）
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.AgentId">
            <summary>
            应用ID
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.EncryptPostData">
            <summary>
            原始加密信息
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.RequestMessage">
            <summary>
            请求实体
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.ResponseMessage">
            <summary>
            响应实体
            正常情况下只有当执行Execute()方法后才可能有值。
            也可以结合Cancel，提前给ResponseMessage赋值。
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.CreateResponseMessage``1">
            <summary>
            根据当前的RequestMessage创建指定类型的ResponseMessage
            </summary>
            <typeparam name="TR">基于ResponseMessageBase的响应消息类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.DefaultResponseMessage(Senparc.Weixin.Work.Entities.IRequestMessageBase)">
            <summary>
            默认返回消息（当任何OnXX消息没有被重写，都将自动返回此默认消息）
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.OnTextOrEventRequest(Senparc.Weixin.Work.Entities.RequestMessageText)">
            <summary>
            预处理文字或事件类型请求。
            这个请求是一个比较特殊的请求，通常用于统一处理来自文字或菜单按钮的同一个执行逻辑，
            会在执行OnTextRequest或OnEventRequest之前触发，具有以下一些特征：
            1、如果返回null，则继续执行OnTextRequest或OnEventRequest
            2、如果返回不为null，则终止执行OnTextRequest或OnEventRequest，返回最终ResponseMessage
            3、如果是事件，则会将RequestMessageEvent自动转为RequestMessageText类型，其中RequestMessageText.Content就是RequestMessageEvent.EventKey
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.OnTextRequest(Senparc.Weixin.Work.Entities.RequestMessageText)">
            <summary>
            文字类型请求
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.OnLocationRequest(Senparc.Weixin.Work.Entities.RequestMessageLocation)">
            <summary>
            位置类型请求
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.OnImageRequest(Senparc.Weixin.Work.Entities.RequestMessageImage)">
            <summary>
            图片类型请求
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.OnVoiceRequest(Senparc.Weixin.Work.Entities.RequestMessageVoice)">
            <summary>
            语音类型请求
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.OnVideoRequest(Senparc.Weixin.Work.Entities.RequestMessageVideo)">
            <summary>
            视频类型请求
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.OnShortVideoRequest(Senparc.Weixin.Work.Entities.RequestMessageShortVideo)">
            <summary>
            小视频类型请求
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.OnFileRequest(Senparc.Weixin.Work.Entities.RequestMessageFile)">
            <summary>
            文件类型请求
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.OnEventRequest(Senparc.Weixin.Work.Entities.IRequestMessageEventBase)">
            <summary>
            Event事件类型请求
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.OnEvent_ClickRequest(Senparc.Weixin.Work.Entities.RequestMessageEvent_Click)">
            <summary>
            Event事件类型请求之CLICK
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.OnEvent_ViewRequest(Senparc.Weixin.Work.Entities.RequestMessageEvent_View)">
            <summary>
            事件之URL跳转视图（View）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.OnEvent_PicPhotoOrAlbumRequest(Senparc.Weixin.Work.Entities.RequestMessageEvent_Pic_Photo_Or_Album)">
            <summary>
            弹出拍照或者相册发图
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.OnEvent_ScancodePushRequest(Senparc.Weixin.Work.Entities.RequestMessageEvent_Scancode_Push)">
            <summary>
            扫码推事件
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.OnEvent_ScancodeWaitmsgRequest(Senparc.Weixin.Work.Entities.RequestMessageEvent_Scancode_Waitmsg)">
            <summary>
            扫码推事件且弹出“消息接收中”提示框
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.OnEvent_LocationSelectRequest(Senparc.Weixin.Work.Entities.RequestMessageEvent_Location_Select)">
            <summary>
            弹出地理位置选择器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.OnEvent_PicWeixinRequest(Senparc.Weixin.Work.Entities.RequestMessageEvent_Pic_Weixin)">
            <summary>
            弹出微信相册发图器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.OnEvent_PicSysphotoRequest(Senparc.Weixin.Work.Entities.RequestMessageEvent_Pic_Sysphoto)">
            <summary>
            弹出系统拍照发图
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.OnEvent_SubscribeRequest(Senparc.Weixin.Work.Entities.RequestMessageEvent_Subscribe)">
            <summary>
            订阅
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.OnEvent_UnSubscribeRequest(Senparc.Weixin.Work.Entities.RequestMessageEvent_UnSubscribe)">
            <summary>
            取消订阅
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.OnEvent_LocationRequest(Senparc.Weixin.Work.Entities.RequestMessageEvent_Location)">
            <summary>
            上报地理位置事件
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.OnEvent_EnterAgentRequest(Senparc.Weixin.Work.Entities.RequestMessageEvent_Enter_Agent)">
            <summary>
            用户进入应用的事件推送(enter_agent)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.MessageHandlers.WorkMessageHandler`1.OnEvent_BatchJobResultRequest(Senparc.Weixin.Work.Entities.RequestMessageEvent_Batch_Job_Result)">
            <summary>
            异步任务完成事件推送(batch_job_result)
            </summary>
            <param name="requestMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.Register.RegisterWorkAccount(Senparc.Weixin.RegisterServices.IRegisterService,System.String,System.String,System.String)">
            <summary>
            注册公众号（或小程序）信息
            </summary>
            <param name="registerService">RegisterService</param>
            <param name="weixinCorpId">weixinCorpId</param>
            <param name="weixinCorpSecret">weixinCorpSecret</param>
            <param name="name">标记AccessToken名称（如微信公众号名称），帮助管理员识别</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.RequestMessageFactory.GetRequestEntity(System.Xml.Linq.XDocument)">
            <summary>
            获取XDocument转换后的IRequestMessageBase实例。
            如果MsgType不存在，抛出UnknownRequestMsgTypeException异常
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.RequestMessageFactory.GetRequestEntity(System.String)">
            <summary>
            获取XDocument转换后的IRequestMessageBase实例。
            如果MsgType不存在，抛出UnknownRequestMsgTypeException异常
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.RequestMessageFactory.GetRequestEntity(System.IO.Stream)">
            <summary>
            获取XDocument转换后的IRequestMessageBase实例。
            如果MsgType不存在，抛出UnknownRequestMsgTypeException异常
            </summary>
            <param name="stream">如Request.InputStream</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.RequestMessageFactory.GetEncryptPostData(System.String)">
            <summary>
            获取微信服务器发送过来的加密xml信息
            </summary>
            <param name="xml"></param>
        </member>
        <member name="M:Senparc.Weixin.Work.ResponseMessageFactory.GetResponseEntity(System.Xml.Linq.XDocument)">
            <summary>
            获取XDocument转换后的IResponseMessageBase实例（通常在反向读取日志的时候用到）。
            如果MsgType不存在，抛出UnknownRequestMsgTypeException异常
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.ResponseMessageFactory.GetResponseEntity(System.String)">
            <summary>
            获取XDocument转换后的IRequestMessageBase实例。
            如果MsgType不存在，抛出UnknownRequestMsgTypeException异常
            </summary>
            <returns></returns>
        </member>
        <member name="F:Senparc.Weixin.Work.Signature.Token">
            <summary>
            在网站没有提供Token（或传入为null）的情况下的默认Token，建议在网站中进行配置。
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Signature.EncodingAESKey">
            <summary>
            在网站没有提供EncodingAESKey（或传入为null）的情况下的默认Token，建议在网站中进行配置。
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.Signature.CorpId">
            <summary>
            在网站没有提供CorpId（或传入为null）的情况下的默认Token，建议在网站中进行配置。
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.Signature.GenarateSinature(System.String,System.String,System.String,System.String)">
            <summary>
            获取签名
            </summary>
            <param name="token"></param>
            <param name="timeStamp"></param>
            <param name="nonce"></param>
            <param name="msgEncrypt"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.Signature.VerifyURL(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            检查签名
            </summary>
            <param name="token"></param>
            <param name="encodingAESKey"></param>
            <param name="corpId"></param>
            <param name="msgSignature">签名串，对应URL参数的msg_signature</param>
            <param name="timeStamp">时间戳，对应URL参数的timestamp</param>
            <param name="nonce">随机串，对应URL参数的nonce</param>
            <param name="echoStr">随机串，对应URL参数的echostr</param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.Signature.EncryptMsg(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            加密消息
            </summary>
            <param name="token"></param>
            <param name="encodingAESKey"></param>
            <param name="corpId"></param>
            <param name="replyMsg"></param>
            <param name="timeStamp"></param>
            <param name="nonce"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.Tencent.Cryptography.AES_decrypt(System.String,System.String,System.String@)">
            <summary>
            解密方法
            </summary>
            <param name="Input">密文</param>
            <param name="EncodingAESKey"></param>
            <returns></returns>
            
        </member>
        <member name="M:Senparc.Weixin.Work.Tencent.Cryptography.chr(System.Int32)">
            将数字转化成ASCII码对应的字符，用于对明文进行补码
            
            @param a 需要转化的数字
            @return 转化得到的字符
        </member>
        <!-- 对于成员“T:Senparc.Weixin.Work.TenPayLib.RequestHandler”忽略有格式错误的 XML 注释 -->
        <member name="F:Senparc.Weixin.Work.TenPayLib.RequestHandler.Key">
            <summary>
            密钥
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.TenPayLib.RequestHandler.Parameters">
            <summary>
            请求的参数
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.TenPayLib.RequestHandler.DebugInfo">
            <summary>
            debug信息
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.TenPayLib.RequestHandler.Init">
            <summary>
            初始化函数
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.TenPayLib.RequestHandler.GetDebugInfo">
            <summary>
            获取debug信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.TenPayLib.RequestHandler.GetKey">
            <summary>
            获取密钥
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.TenPayLib.RequestHandler.SetKey(System.String)">
            <summary>
            设置密钥
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Senparc.Weixin.Work.TenPayLib.RequestHandler.SetParameter(System.String,System.String)">
            <summary>
            设置参数值
            </summary>
            <param name="parameter"></param>
            <param name="parameterValue"></param>
        </member>
        <member name="M:Senparc.Weixin.Work.TenPayLib.RequestHandler.CreateMd5Sign(System.String,System.String)">
            <summary>
            创建md5摘要,规则是:按参数名称a-z排序,遇到空值的参数不参加签名
            </summary>
            <param name="key">参数名</param>
            <param name="value">参数值</param>
            key和value通常用于填充最后一组参数
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.TenPayLib.RequestHandler.ParseXML">
            <summary>
            输出XML
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.TenPayLib.RequestHandler.SetDebugInfo(System.String)">
            <summary>
            设置debug信息
            </summary>
            <param name="debugInfo"></param>
        </member>
        <member name="T:Senparc.Weixin.Work.TenPayLib.ResponseHandler">
                '============================================================================
                'Api说明：
                'GetKey()/setKey(),获取/设置密钥
                'GetParameter()/setParameter(),获取/设置参数值
                'GetAllParameters(),获取所有参数
                'IsTenpaySign(),是否正确的签名,true:是 false:否
                'IsWXsign(),是否正确的签名,true:是 false:否
                ' * IsWXsignfeedback判断微信维权签名
                ' *GetDebugInfo(),获取debug信息 
                '============================================================================
        </member>
        <member name="F:Senparc.Weixin.Work.TenPayLib.ResponseHandler.Key">
            <summary>
            密钥 
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.TenPayLib.ResponseHandler.Appkey">
            <summary>
            appkey
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.TenPayLib.ResponseHandler.XmlMap">
            <summary>
            xmlMap
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.TenPayLib.ResponseHandler.Parameters">
            <summary>
            应答的参数
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.TenPayLib.ResponseHandler.DebugInfo">
            <summary>
            debug信息
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.TenPayLib.ResponseHandler.Content">
            <summary>
            原始内容
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.TenPayLib.ResponseHandler.Init">
            <summary>
            初始化函数
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.TenPayLib.ResponseHandler.#ctor(System.Web.HttpContext)">
            <summary>
            获取页面提交的get和post参数
            </summary>
            <param name="httpContext"></param>
        </member>
        <member name="M:Senparc.Weixin.Work.TenPayLib.ResponseHandler.GetKey">
            <summary>
            获取密钥
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.TenPayLib.ResponseHandler.SetKey(System.String)">
            <summary>
            设置密钥
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Senparc.Weixin.Work.TenPayLib.ResponseHandler.GetParameter(System.String)">
            <summary>
            获取参数值
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.TenPayLib.ResponseHandler.SetParameter(System.String,System.String)">
            <summary>
            设置参数值
            </summary>
            <param name="parameter"></param>
            <param name="parameterValue"></param>
        </member>
        <member name="M:Senparc.Weixin.Work.TenPayLib.ResponseHandler.IsTenpaySign">
            <summary>
            是否财付通签名,规则是:按参数名称a-z排序,遇到空值的参数不参加签名。return boolean
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.TenPayLib.ResponseHandler.GetDebugInfo">
            <summary>
            获取debug信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.TenPayLib.ResponseHandler.SetDebugInfo(System.String)">
            <summary>
            设置debug信息
            </summary>
            <param name="debugInfo"></param>
        </member>
        <member name="M:Senparc.Weixin.Work.TenPayLib.ResponseHandler.ParseXML">
            <summary>
            输出XML
            </summary>
            <returns></returns>
        </member>
        <member name="T:Senparc.Weixin.Work.TenPayLib.TenPayInfo">
            <summary>
            微信支付基础信息储存类
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.TenPayLib.TenPayInfo.AppId">
            <summary>
            第三方用户唯一凭证appid
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.TenPayLib.TenPayInfo.AppSecret">
            <summary>
            第三方用户唯一凭证密钥，即appsecret
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.TenPayLib.TenPayInfo.MchId">
            <summary>
            商户ID
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.TenPayLib.TenPayInfo.Key">
            <summary>
            商户支付密钥Key。登录微信商户后台，进入栏目【账户设置】【密码安全】【API 安全】【API 密钥】
            </summary>
        </member>
        <member name="P:Senparc.Weixin.Work.TenPayLib.TenPayInfo.TenPayNotify">
            <summary>
            支付完成后的回调处理页面
            </summary>
        </member>
        <member name="T:Senparc.Weixin.Work.TenPayLib.TenPayInfoCollection">
            <summary>
            微信支付信息集合，Key为商户号（MchId）
            </summary>
        </member>
        <member name="F:Senparc.Weixin.Work.TenPayLib.TenPayInfoCollection.Data">
            <summary>
            微信支付信息集合，Key为商户号（MchId）
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.TenPayLib.TenPayInfoCollection.Register(Senparc.Weixin.Work.TenPayLib.TenPayInfo)">
            <summary>
            注册TenPayInfo信息
            </summary>
            <param name="tenPayInfo"></param>
        </member>
        <member name="T:Senparc.Weixin.Work.TenPayLib.TenPayUtil">
            <summary>
            TenpayUtil 的摘要说明。
            配置文件
            </summary>
        </member>
        <member name="M:Senparc.Weixin.Work.TenPayLib.TenPayUtil.GetNoncestr">
            <summary>
            随机生成Noncestr
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.TenPayLib.TenPayUtil.UrlEncode(System.String,System.String)">
            <summary>
            对字符串进行URL编码
            </summary>
            <param name="instr"></param>
            <param name="charset"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.TenPayLib.TenPayUtil.UrlDecode(System.String,System.String)">
            <summary>
            对字符串进行URL解码
            </summary>
            <param name="instr"></param>
            <param name="charset"></param>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.TenPayLib.TenPayUtil.UnixStamp">
            <summary>
            取时间戳生成随即数,替换交易单号中的后10位流水号
            </summary>
            <returns></returns>
        </member>
        <member name="M:Senparc.Weixin.Work.TenPayLib.TenPayUtil.BuildRandomStr(System.Int32)">
            <summary>
            取随机数
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
    </members>
</doc>
