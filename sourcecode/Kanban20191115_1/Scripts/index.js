"use strict";
function imageConverFull() {
    $(".images-show-wrapper").css({ width: $(window).width(), height: $(window).height(); - 50 })
}
function imagesBodyScroll() {
    st = $(window).scrollTop(), st > 200 && !newShow ? ($(".news").show(), newShow = !0) : st <= 200 && newShow && ($(".news").hide(), newShow = !1), st < 500 && (imagesBody.css({ opacity: 1 - st / 1e3, "-webkit-filter": "blur(" + st / 90 + "px)", "-moz-filter": "blur(" + st / 90 + "px)", "-o-filter": "blur(" + st / 90 + "px)", "-ms-filter": "blur(" + st / 90 + "px)", filter: "blur(" + st / 90 + "px)" }), imsageArrow.css("opacity", .5 - st / 250))
} var st = 0, imagesBody = null, imsageArrow = null, chart = null, stock = null, map = null, newShow = !1, _coverVid = function (e, t, o) { function i(e, t) { var o = null; return function () { var i = this, a = arguments; window.clearTimeout(o), o = window.setTimeout(function () { e.apply(i, a) }, t) } } function a() { console.log("sizeVideo"); var i = e.parentNode.offsetHeight, a = e.parentNode.offsetWidth, r = t, n = o, s = i / n, l = a / r; l > s ? (e.style.height = "auto", e.style.width = a + "px") : (e.style.height = i + "px", e.style.width = "auto") } a(), window.addEventListener("resize", i(a, 50)), e.style.position = "absolute", e.style.top = "50%", e.style.left = "50%", e.style["-webkit-transform"] = "translate(-50%, -50%)", e.style["-ms-transform"] = "translate(-50%, -50%)", e.style.transform = "translate(-50%, -50%)", e.parentNode.style.overflow = "hidden"; var r = e.getAttribute("poster"); e.removeAttribute("poster"), e.parentNode.style.backgroundImage = "url(" + r + ")", e.parentNode.style.backgroundSize = "cover", e.parentNode.style.backgroundPosition = "center center"; var n = "undefined" != typeof e.canPlayType, s = !1; (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(navigator.userAgent.substr(0, 4))) && (s = !0), n && !s || e && e.parentNode && e.parentNode.removeChild(e) }; window.jQuery && jQuery.fn.extend({ coverVid: function () { return _coverVid(this[0], arguments[0], arguments[1]), this } }), $(document).ready(function () { imageConverFull(), $(window).resize(imageConverFull), imagesBody = $(".images-body"), imsageArrow = $(".images-arrow"), $(window).scroll(imagesBodyScroll) }), Highcharts.setOptions({ credits: { text: "Highcharts.com.cn", href: "http://highcharts.com.cn" }, lang: { downloadJPEG: "保存 JPG 图片", downloadPNG: "保存 PNG 图片", downloadPDF: "保存 PDF 文件", downloadSVG: "保存 SVG 图片", printChart: "打印图表", rangeSelectorZoom: "缩放", drillUpText: "< 返回 “{series.name}”" } }), jQuery(function (e) { function t(t) { var o = this, i = e(this.chart.container.parentNode); !i.is(":appeared") && o.options.animation || t.call(o), i.each(function () { e(this).appear(), e(this).on("appear", function () { t.call(o), e(this).unbind() }) }) } if (e(document).width() >= 768) { var o = Highcharts.Series.prototype.render; Highcharts.wrap(Highcharts.Series.prototype, "render", t), e(window).bind("resize", function () { Highcharts.Series.prototype.render = o }) } var i = 1517; if (e("#highcharts-demo-box .demo-frame-container").highcharts({ colors: ["#B7FFB5", "#fff", "#f45b5b", "#7798BF", "#aaeeee", "#ff0066", "#eeaaee", "#55BF3B", "#DF5353", "#7798BF", "#aaeeee"], credits: { enabled: !1 }, chart: { spacing: 20, height: 360, backgroundColor: "#61BC7B", style: { fontFamily: "Roboto, sans-serif" } }, title: { text: "东京气候 ", style: { color: "white" } }, legend: { enabled: !1 }, plotOptions: { series: { borderColor: "none" } }, xAxis: [{ categories: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"], tickColor: "#A0D9B0", tickWidth: 0, lineColor: "#A0D9B0", lineWidth: 2, labels: { style: { color: "#FFF", fontSize: "1em" } } }], yAxis: [{ labels: { formatter: function () { return this.value }, align: "left", x: 0, y: -2, style: { color: "#FFF" } }, showFirstLabel: !1, showLastLabel: !1, title: { text: "温度（°C）", style: { color: "#FFF", fontSize: "1.2em" } } }, { gridLineColor: "#A0D9B0", title: { text: "Rainfall", style: { color: "#FFF", fontSize: "1.2em" } }, labels: { align: "right", x: 0, y: -2, formatter: function () { return this.value + " mm" }, style: { color: "#FFF" } }, showFirstLabel: !1, showLastLabel: !1, opposite: !0 }], tooltip: { formatter: function () { return "日照" == this.series.name ? "<b>" + this.point.name + "：</b> " + this.y : "" + this.x + "： " + this.y + ("降雨量" == this.series.name ? " mm" : "°C") } }, series: [{ name: "降雨量", type: "column", yAxis: 1, data: [49.9, 71.5, 106.4, 129.2, 144, 176, 135.6, 148.5, 216.4, 194.1, 95.6, 54.4], animation: { duration: i } }, { name: "气温", type: "spline", data: [7, 6.9, 9.5, 14.5, 18.2, 21.5, 25.2, 26.5, 23.3, 18.3, 13.9, 9.6], animation: { duration: i } }, { name: "日照", type: "pie", data: [{ y: 2020, name: "日照时间", sliced: !0, color: "#FFD664", dataLabels: { style: { color: "white", textShadow: !1, fontSize: "1em" } } }, { y: 6740, name: "非日照时间 (包括夜晚)", dataLabels: { enabled: !1 }, color: "#59936A" }], center: [70, 45], size: 80, animation: { duration: i } }], navigation: { buttonOptions: { symbolStroke: "rgba(255, 255, 255, 0.8)", theme: { fill: "rgba(255, 255, 255, 0.2)", states: { hover: { fill: "rgba(255, 255, 255, 0.3)", stroke: "transparent" }, select: { fill: "rgba(255, 255, 255, 0.3)", stroke: "transparent" } } } } } }), e.getJSON("https://data.jianshukeji.com/stock/history/000001", function (t) { if (1 !== t.code) return alert("读取股票数据失败！"), !1; t = t.data; var o = [], i = [], a = t.length, r = [["week", [1]], ["month", [1, 2, 3, 4, 6]]], n = 0; for (n; n < a; n += 1)o.push([t[n][0], t[n][1], t[n][2], t[n][3], t[n][4]]), i.push([t[n][0], t[n][5]]); e("#highstock-demo-box").find(".demo-frame-container").highcharts("StockChart", { chart: { backgroundColor: null }, rangeSelector: { selected: 1, inputDateFormat: "%Y-%m-%d" }, title: { text: "平安银行历史股价" }, xAxis: { dateTimeLabelFormats: { millisecond: "%H:%M:%S.%L", second: "%H:%M:%S", minute: "%H:%M", hour: "%H:%M", day: "%m-%d", week: "%m-%d", month: "%y-%m", year: "%Y" } }, tooltip: { split: !1, shared: !0 }, yAxis: [{ labels: { align: "right", x: -3 }, title: { text: "股价" }, height: "65%", resize: { enabled: !0 }, lineWidth: 2 }, { labels: { align: "right", x: -3 }, title: { text: "成交量" }, top: "65%", height: "35%", offset: 0, lineWidth: 2 }], series: [{ type: "candlestick", name: "平安银行", color: "green", lineColor: "green", upColor: "red", upLineColor: "red", tooltip: {}, navigatorOptions: { color: Highcharts.getOptions().colors[0] }, data: o, dataGrouping: { units: r }, id: "sz" }, { type: "column", data: i, yAxis: 1, dataGrouping: { units: r } }] }) }), !map) { var a = "https://data.jianshukeji.com/jsonp?filename=geochina/"; e.getJSON(a + "china.json&callback=?", function (t) { var o = []; Highcharts.each(t.features, function (e, t) { var i = { name: e.properties.name, value: Math.floor(100 * Math.random() + 1) }; e.properties.drilldown && (i.drilldown = e.properties.drilldown), o.push(i) }), map = new Highcharts.Map(e("#highmaps-demo-box").find(".demo-frame-container")[0], { chart: { spacing: 10, height: 360, backgroundColor: "#F49952", events: { drilldown: function (t) { if (t.point.drilldown) { var o = t.point.properties.fullname; map.showLoading("下钻中，请稍后..."), e.getJSON(a + t.point.drilldown + ".json&callback=?", function (e) { e = Highcharts.geojson(e), Highcharts.each(e, function (e) { e.properties.drilldown && (e.drilldown = e.properties.drilldown), e.value = Math.floor(100 * Math.random() + 1) }), map.hideLoading(), map.addSeriesAsDrilldown(t.point, { name: t.point.name, data: e, dataLabels: { enabled: !0, format: "{point.name}" } }), map.setTitle({ text: o }) }) } }, drillup: function () { map.setTitle({ text: "中国地图" }) } } }, title: { text: "中国地图" }, mapNavigation: { buttonOptions: { verticalAlign: "bottom", theme: { fill: "rgba(255, 255, 255, 0.2)", stroke: "rgba(255, 255, 255, 0.7)", style: { color: "white" }, states: { hover: { fill: "rgba(255, 255, 255, 0.4)", stroke: "rgba(255, 255, 255, 0.7)" }, select: { fill: "rgba(255, 255, 255, 0.4)", stroke: "rgba(255, 255, 255, 0.7)" } } } }, enabled: !0, enableMouseWheelZoom: !1 }, tooltip: { useHTML: !0, headerFormat: "<table><tr><td><b>{point.key}</b></td></tr>", pointFormat: '<tr><td>全称</td><td>{point.properties.fullname}</td></tr><tr><td>编号</td><td>{point.properties.areacode} <span style="color: red">*</span></td></tr><tr><td>父级</td><td>{point.properties.parent}<td></tr><tr><td>经纬度</td><td>（{point.properties.longitude}，{point.properties.latitude}）</td></tr>', footerFormat: "</table>" }, legend: { enabled: !1, layout: "vertical", align: "left", verticalAlign: "top", y: 30, left: -20, floating: !0 }, credits: { enabled: !0, text: "", style: { color: "rgba(255, 255, 255, 0.6)" }, position: { y: -40 } }, series: [{ data: o, mapData: t, joinBy: "name", name: "中国地图", states: { hover: { color: "#a4edba" } } }] }) }) } });