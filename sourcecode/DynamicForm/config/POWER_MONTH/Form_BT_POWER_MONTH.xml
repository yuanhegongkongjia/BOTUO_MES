<?xml version="1.0" encoding="utf-8"?>
<Form Id="Form_BT_POWER_MONTH" Name="Form_BT_POWER_MONTH" DAImp="DynamicForm.DA.Form_BT_POWER_MONTHDA,DynamicForm">
  <Panel Id="queryPanel" Name="queryPanel" Type="SingleRecord" Additional="{class:'ddz-maindiv',style:'margin-bottom: 20px;'}">
    <Row>
      <Control Name="PKID" Type="hidden" />
      <Control Name="CreateTime" Type="hidden" />
      <Control Name="Collect_Value" Type="hidden" />
      <Control Name="POSITION" Text="电表选择" Width="span8" Type="select" Options="{'全部电表':'全部电表','高压球磨机':'高压球磨机','低压车间':'低压车间'}&#xA;" OptionType="JSON" />
    </Row>
    <Row>
      <Control Name="CollectMonthFrom" Type="hidden" />
      <Control Name="CollectMonthTo" Type="hidden" />
      <Control Name="J" Width="span8" Type="custom" />
      <!--DF_CUSTOM_HTML
<div class="span8 control-group">
<label class="control-label">采集月份从:</label><div class="controls"><input type="text" id="J_Month" name="J_Month"></div>
</div>
-->
      <!--DF_SCRIPT
BUI.use('bui/calendar',function(Calendar){
          var inputEl = $('#J_Month'),
        monthpicker = new BUI.Calendar.MonthPicker({
          trigger : inputEl,
         // month:1, //月份从0开始，11结束
          autoHide : true,
          align : {
            points:['bl','tl']
          },
          //year:2000,
          success:function(){
            var month = this.get('month'),
              year = this.get('year');
month=month+1;
if(month<10){
 inputEl.val(year + '-0' + month);
 $('#CollectMonthFrom').val(year + '-0' + month);
}else{
 inputEl.val(year + '-' + month);
 $('#CollectMonthFrom').val(year + '-' + month);

}
                        this.hide();
          }
        });
        monthpicker.render();
        monthpicker.on('show',function(ev){
          var val = inputEl.val(),
            arr,month,year;
          if(val){
            arr = val.split('-'); //分割年月
            year = parseInt(arr[0]);
            month = parseInt(arr[1]);
            monthpicker.set('year',year);
            monthpicker.set('month',month - 1);
          }
        });

        

      });
-->
      <Control Name="J1" Width="span8" Type="custom" />
      <!--DF_CUSTOM_HTML
<div class="span8 control-group">
<label class="control-label">到:</label><div class="controls"><input type="text" id="J_Month1" name="J_Month1"></div></div>
-->
      <!--DF_SCRIPT
BUI.use('bui/calendar',function(Calendar){ 
 var inputEl1 = $('#J_Month1'),
        monthpicker1 = new BUI.Calendar.MonthPicker({
          trigger : inputEl1,
          autoHide : true,
          align : {
            points:['bl','tl']
          },
          success:function(){
            var month = this.get('month'),
              year = this.get('year');
month=month+1;
if(month<10){
inputEl1.val(year + '-0' + month);//月份从0开始，11结束
$('#CollectMonthTo').val(year + '-0' + month);

}else{
inputEl1.val(year + '-' + month);//月份从0开始，11结束
$('#CollectMonthTo').val(year + '-' + month);

}

            this.hide();
          }
        });
        monthpicker1.render();
        monthpicker1.on('show',function(ev){
          var val = inputEl1.val(),
            arr,month,year;
          if(val){
            arr = val.split('-'); //分割年月
            year = parseInt(arr[0]);
            month = parseInt(arr[1]);
            monthpicker1.set('year',year);
            monthpicker1.set('month',month - 1);
          }
        });
      });
-->
      <Control Name="btnQuery" Text="查询" Type="button" ControlAttributes="{class:&quot;ddz-button3&quot;, style:'cursor:pointer',onclick:&quot;initChart()&quot;}" Action="query" />
    </Row>
    <Row>
      <Control Name="CreateUser" Type="hidden" />
      <Control Name="LastModifyTime" Type="hidden" />
    </Row>
    <Row>
      <Control Name="LastModifyUser" Type="hidden" />
      <Control Name="REMARK1" Type="hidden" />
    </Row>
    <Row>
      <Control Name="REMARK2" Type="hidden" />
      <Control Name="REMARK3" Type="hidden" />
    </Row>
    <Row>
      <Control Name="REMARK4" Type="hidden" />
      <Control Name="REMARK5" Type="hidden" />
    </Row>
  </Panel>
  <Panel Id="Panel20201104141657287" Name="Panel20201104141657287" Type="SingleRecord">
    <Row>
      <Control Name="Control20201104141707360" Text="Control20201104141707360" Width="span8" Type="custom" />
      <!--DF_CUSTOM_HTML
<div class='span24'><div id='container1' style='height:400px;'></div></div>
-->
      <!--DF_SCRIPT
var Position=$('#POSITION').val();

if(Position=='全部电表'){

var myChart = echarts.init(document.getElementById('container1'));
//var myChart1 = echarts.init(document.getElementById('container1'));
initChart();

//initChart1();
function initChart(){

const colorList = ["#9E87FF", '#73DDFF', '#fe9a8b', '#F56948', '#9E87FF'] 
var option =  {
    xAxis: {
        type: 'category',
        data: []
    },
    yAxis: {
        type: 'value',
        splitLine:{
          show:false}
    },
    tooltip: {
        trigger: 'axis',
        axisPointer: {
            label: {
                show: true,
                backgroundColor: '#fff',
                color: '#556677',
                borderColor: 'rgba(0,0,0,0)',
                shadowColor: 'rgba(0,0,0,0)',
                shadowOffsetY: 0
            },
            lineStyle: {
                width: 0
            }
        },
        backgroundColor: '#fff',
        textStyle: {
            color: '#5c6c7c'
        },
        padding: [10, 10],
        extraCssText: 'box-shadow: 1px 0 2px 0 rgba(163,163,163,0.5)'
    },


    series: [{
        data: [],
        type: 'line',
        smooth: true,
        showSymbol: false,
        lineStyle: {
                width: 5,
                color: new echarts.graphic.LinearGradient(1, 1, 0, 0, [{
                        offset: 0,
                        color: '#73DD39'
                    },
                    {
                        offset: 1,
                        color: '#73DDFF'
                    }
                ]),
                shadowColor: 'rgba(115,221,255, 0.3)',
                shadowBlur: 10,
                shadowOffsetY: 20
            },
            itemStyle: {
                normal: {
                    color: colorList[0],
                    borderColor: colorList[0]
                }
            }
        },     
          {
        data: [],
        type: 'line',
        smooth: true,
        showSymbol: false,
              lineStyle: {
                width: 5,
                color: new echarts.graphic.LinearGradient(0, 1, 0, 0, [{
                        offset: 0,
                        color: '#9effff'
                    },
                    {
                        offset: 1,
                        color: '#9E87FF'
                    }
                ]),
                shadowColor: 'rgba(254,154,139, 0.3)',
                shadowBlur: 10,
                shadowOffsetY: 20
            },
            itemStyle: {
                normal: {
                    color: colorList[1],
                    borderColor: colorList[1]
                }
            }
        }
        
    ]

};
 myChart.setOption(option);

 initChartPOWER();

}




function initChartPOWER(){
var labelOption = {
    normal: {
        show: true,
        align: 'left',
        verticalAlign: 'middle',
        formater:function(a,b,c){ return c;},
        fontSize: 16

    }
};

var Position=$('#POSITION').val()
var legend=[Position];
var yName="千瓦时";
var xName="日期";

$.getJSON('../DataAnalyzeHandler.ashx?action=PowerMonthquery',
      {Position:Position,
      CollectMonthFrom:$('#CollectMonthFrom').val(),
      CollectMonthTo:$('#CollectMonthTo').val()
             }, function (data) {
                if (data.hasError == true) {
                    alert(data.error);
                    return;
                }
                else {
                   var d1=JSON.parse(data.data1);
                    var d=JSON.parse(data.data);
                    var categories=[];
                    var s=[];
                    //var s = [{ name: '订单计划量', data: [] }, { name: '订单完成量', data: [] }];
                    var lengde=[];
                    for(m in d1){
                      categories[m]=d1[m];
                    }

                   
                      for(m in d){
                dm=[];
                        for(n in d[m].data_vm){
              dm.push([d[m].data_vm[n].CTime,d[m].data_vm[n].Collect_Value]);
                        }
                        s.push({name:d[m].name,data:dm,type: 'line',label:labelOption});
                    }
                    for(m in s){
                      lengde[m]=s[m].name;
                    }

                  myChart.setOption({
                      legend: {
                         data:lengde,
                         right:'20'
                       },
          title:[{
            text:'所有电表电能月分析',
            left:'center'
          }],
                      xAxis: {
                       type: 'category',
                       axisTick: {show: false},
                        data: categories,
                        name:xName
                      },
                      yAxis: [{
                        type: 'value',
                        name:yName
                      }],
                    series: 
                       s
                   });

                }

     });
}


}

else{

var myChart = echarts.init(document.getElementById('container1'));
//var myChart1 = echarts.init(document.getElementById('container1'));
initChart();

//initChart1();
function initChart(){

const colorList = ["#9E87FF", '#73DDFF', '#fe9a8b', '#F56948', '#9E87FF'] 
var option =  {
    xAxis: {
        type: 'category',
        data: []
    },
    yAxis: {
        type: 'value',
        splitLine:{
          show:false}
    },
    tooltip: {
        trigger: 'axis',
        axisPointer: {
            label: {
                show: true,
                backgroundColor: '#fff',
                color: '#556677',
                borderColor: 'rgba(0,0,0,0)',
                shadowColor: 'rgba(0,0,0,0)',
                shadowOffsetY: 0
            },
            lineStyle: {
                width: 0
            }
        },
        backgroundColor: '#fff',
        textStyle: {
            color: '#5c6c7c'
        },
        padding: [10, 10],
        extraCssText: 'box-shadow: 1px 0 2px 0 rgba(163,163,163,0.5)'
    },

    series: [{
        data: [],
        type: 'line',
        smooth: true,
        showSymbol: false,
        lineStyle: {
                width: 5,
                color: new echarts.graphic.LinearGradient(1, 1, 0, 0, [{
                        offset: 0,
                        color: '#73DD39'
                    },
                    {
                        offset: 1,
                        color: '#73DDFF'
                    }
                ]),
                shadowColor: 'rgba(115,221,255, 0.3)',
                shadowBlur: 10,
                shadowOffsetY: 20
            },
            itemStyle: {
                normal: {
                    color: colorList[1],
                    borderColor: colorList[1]
                }
            }
        }
        
    ]

};
 myChart.setOption(option);

 initChartPOWERDAY();

}




function initChartPOWERDAY(){
var labelOption = {
    normal: {
        show: true,
        align: 'left',
        verticalAlign: 'middle',
        formater:function(a,b,c){ return c;},
        fontSize: 16

    }
};

var Position=$('#POSITION').val()
var legend=[Position];
var yName="千瓦时";
var xName="日期";

$.getJSON('../DataAnalyzeHandler.ashx?action=PowerMonthquery',
      {Position:Position,
      CollectMonthFrom:$('#CollectMonthFrom').val(),
      CollectMonthTo:$('#CollectMonthTo').val()
             }, function (data) {
                if (data.hasError == true) {
                    alert(data.error);
                    return;
                }
                else {
                   var d1=JSON.parse(data.data1);
                    var d=JSON.parse(data.data);
                    var categories=[];
                    var s=[];
                    //var s = [{ name: '订单计划量', data: [] }, { name: '订单完成量', data: [] }];
                    var lengde=[];
                    for(m in d1){
                      categories[m]=d1[m];
                    }

                    
                  
                    for(m in d){
            dm=[];
                        for(n in d[m].data_vm){
              dm.push([d[m].data_vm[n].CTime,d[m].data_vm[n].Collect_Value]);
                        }
                        s.push({name:d[m].name,data:dm,type: 'line',label:labelOption});
                      }

                   myChart.setOption({
                      legend: {
                         data:legend,
                         right:'20'
                       },
          title:[{
            text:$('#POSITION').val()+'电能用量月分析',
            left:'center'
          }],
                      xAxis: {
                       type: 'category',
                       axisTick: {show: false},
                        data: categories,
                        name:xName
                      },
                      yAxis: [{
                        type: 'value',
                        name:yName
                      }],
                    series: 
                       s
                  });

                }

     });
}

}
-->
    </Row>
  </Panel>
  <Panel Id="grid1" Name="grid1" Type="MultiRecord" Additional="{&quot;DF_QUERY_CONDITION_PANEL&quot;:&quot;queryPanel&quot;}" Plugins="BUI.Grid.Plugins.CheckSelection,BUI.Grid.Plugins.RowNumber">
    <Column Name="PKID" Text="序号" Width="100" Sortable="true" />
    <Column Name="POSITION" Text="电表" Width="100" Sortable="true" />
    <Column Name="Collect_Value" Text="采集值" Width="100" Sortable="true" />
    <Column Name="CreateTime" Text="采集时间" Sortable="true" />
    <Column Name="CreateUser" Visible="false" Sortable="true" />
    <Column Name="LastModifyTime" Visible="false" Sortable="true" />
    <Column Name="LastModifyUser" Visible="false" Sortable="true" />
    <Column Name="REMARK1" Visible="false" Sortable="true" />
    <Column Name="REMARK2" Visible="false" Sortable="true" />
    <Column Name="REMARK3" Visible="false" Sortable="true" />
    <Column Name="REMARK4" Visible="false" Sortable="true" />
    <Column Name="REMARK5" Visible="false" Sortable="true" />
  </Panel>
  <Panel Id="opPanel" Name="opPanel" Type="SingleRecord">
    <Row>
      <Control Name="btnDelete" Text="删除" Type="button" ControlAttributes="{&quot;class&quot;:&quot;ddz-button2&quot;, style:'cursor:pointer', &quot;onclick&quot;:&quot;btnDelete_click();return false;&quot; }" Action="link" />
      <!--DF_SCRIPT
function btnDelete_click() {
    var grid = BUI.getControl('grid1');
    var selections = grid.getSelection();
    if (selections.length == 0) {
        dfAlert(getRes('请先选择记录'));
        return;
    }
    var p = $.map(selections, function(a) {
        return {
            'PKID': a.PKID
        }
    });
    if (confirm(getRes('确定要删除选定的记录么？'))) {
        dfGetData('deleteform', {
            DF_FORMNAME: 'Form_BT_POWER_MONTH',
            data: BUI.JSON.stringify(p)
        }, function(data) {
            BUI.getControl('grid1').get('store').load();
        });
    }
}
-->
      <Control Name="btnAdd" Type="hidden" ControlAttributes=" {&quot;class&quot;:&quot;ddz-button1&quot;, style:'cursor:pointer',&quot;onclick&quot;:&quot;btnAdd_click();return false;&quot;}" />
      <!--DF_SCRIPT
function btnAdd_click() {
    var url = 'DFIndex.aspx?DF_FORMNAME=Form_BT_POWER_MONTH_Edit';
    var dialog = dfOverlayDialog(800, 600, '', url);
    // 关闭时自动刷新 grid
    dialog.on('closing', function() {
        BUI.getControl('grid1').get('store').load();
    });
}
-->
      <Control Name="btnEdit" Type="hidden" ControlAttributes="{&quot;class&quot;:&quot;ddz-button2&quot;, style:'cursor:pointer', &quot;onclick&quot;:&quot;btnUpdate_click();return false;&quot; }" />
      <!--DF_SCRIPT
function btnUpdate_click() {
    var grid = BUI.getControl('grid1');
    var selections = grid.getSelection();
    if (selections.length != 1) {
        dfAlert(getRes('请选择一条记录进行编辑'));
        return;
    }
    var p = "&EditMode=Edit";
    p += '&PKID=' + selections[0].PKID;
    var url = 'DFIndex.aspx?DF_FORMNAME=Form_BT_POWER_MONTH_Edit' + p;
    var dialog = dfOverlayDialog(800, 600, '', url);
    // 关闭时自动刷新 grid
    dialog.on('closing', function() {
        BUI.getControl('grid1').get('store').load();
    });
}
-->
    </Row>
  </Panel>
</Form>